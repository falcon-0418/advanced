current directory: /Users/falcon/work_space/runteq_2/advanced_rails/23890_falcon-0418_runteq_curriculum_advanced/vender/bundle/ruby/2.6.0/gems/nio4r-2.5.4/ext/nio4r
/Users/falcon/.rbenv/versions/2.6.5/bin/ruby -I /Users/falcon/.rbenv/versions/2.6.5/lib/ruby/2.6.0 -r ./siteconf20230612-72504-1huy99n.rb extconf.rb
checking for unistd.h... yes
checking for linux/aio_abi.h... no
checking for sys/select.h... yes
checking for port_event_t in poll.h... no
checking for sys/epoll.h... no
checking for sys/event.h... yes
checking for sys/queue.h... yes
checking for port_event_t in port.h... no
checking for sys/resource.h... yes
creating Makefile

current directory: /Users/falcon/work_space/runteq_2/advanced_rails/23890_falcon-0418_runteq_curriculum_advanced/vender/bundle/ruby/2.6.0/gems/nio4r-2.5.4/ext/nio4r
make "DESTDIR=" clean

current directory: /Users/falcon/work_space/runteq_2/advanced_rails/23890_falcon-0418_runteq_curriculum_advanced/vender/bundle/ruby/2.6.0/gems/nio4r-2.5.4/ext/nio4r
make "DESTDIR="
compiling bytebuffer.c
compiling monitor.c
monitor.c:90:25: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    if (interests_id == rb_intern("r")) {
                        ^~~~~~~~~~~~~~
/Users/falcon/.rbenv/versions/2.6.5/include/ruby-2.6.0/ruby/ruby.h:1826:23: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                      ^
monitor.c:90:25: note: '{' token is here
    if (interests_id == rb_intern("r")) {
                        ^~~~~~~~~~~~~~
/Users/falcon/.rbenv/versions/2.6.5/include/ruby-2.6.0/ruby/ruby.h:1826:24: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/falcon/.rbenv/versions/2.6.5/include/ruby-2.6.0/ruby/ruby.h:1811:5: note: expanded from macro 'RUBY_CONST_ID_CACHE'
    {                                                   \
    ^
monitor.c:90:25: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    if (interests_id == rb_intern("r")) {
                        ^~~~~~~~~~~~~~
/Users/falcon/.rbenv/versions/2.6.5/include/ruby-2.6.0/ruby/ruby.h:1826:24: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/falcon/.rbenv/versions/2.6.5/include/ruby-2.6.0/ruby/ruby.h:1816:5: note: expanded from macro 'RUBY_CONST_ID_CACHE'
    }
    ^
monitor.c:90:25: note: ')' token is here
    if (interests_id == rb_intern("r")) {
                        ^~~~~~~~~~~~~~
/Users/falcon/.rbenv/versions/2.6.5/include/ruby-2.6.0/ruby/ruby.h:1826:56: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                                                       ^
monitor.c:92:32: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    } else if (interests_id == rb_intern("w")) {
                               ^~~~~~~~~~~~~~
/Users/falcon/.rbenv/versions/2.6.5/include/ruby-2.6.0/ruby/ruby.h:1826:23: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                      ^
monitor.c:92:32: note: '{' token is here
    } else if (interests_id == rb_intern("w")) {
                               ^~~~~~~~~~~~~~
/Users/falcon/.rbenv/versions/2.6.5/include/ruby-2.6.0/ruby/ruby.h:1826:24: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/falcon/.rbenv/versions/2.6.5/include/ruby-2.6.0/ruby/ruby.h:1811:5: note: expanded from macro 'RUBY_CONST_ID_CACHE'
    {                                                   \
    ^
monitor.c:92:32: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    } else if (interests_id == rb_intern("w")) {
                               ^~~~~~~~~~~~~~
/Users/falcon/.rbenv/versions/2.6.5/include/ruby-2.6.0/ruby/ruby.h:1826:24: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/falcon/.rbenv/versions/2.6.5/include/ruby-2.6.0/ruby/ruby.h:1816:5: note: expanded from macro 'RUBY_CONST_ID_CACHE'
    }
    ^
monitor.c:92:32: note: ')' token is here
    } else if (interests_id == rb_intern("w")) {
                               ^~~~~~~~~~~~~~
/Users/falcon/.rbenv/versions/2.6.5/include/ruby-2.6.0/ruby/ruby.h:1826:56: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                                                       ^
monitor.c:94:32: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    } else if (interests_id == rb_intern("rw")) {
                               ^~~~~~~~~~~~~~~
/Users/falcon/.rbenv/versions/2.6.5/include/ruby-2.6.0/ruby/ruby.h:1826:23: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                      ^
monitor.c:94:32: note: '{' token is here
    } else if (interests_id == rb_intern("rw")) {
                               ^~~~~~~~~~~~~~~
/Users/falcon/.rbenv/versions/2.6.5/include/ruby-2.6.0/ruby/ruby.h:1826:24: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/falcon/.rbenv/versions/2.6.5/include/ruby-2.6.0/ruby/ruby.h:1811:5: note: expanded from macro 'RUBY_CONST_ID_CACHE'
    {                                                   \
    ^
monitor.c:94:32: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    } else if (interests_id == rb_intern("rw")) {
                               ^~~~~~~~~~~~~~~
/Users/falcon/.rbenv/versions/2.6.5/include/ruby-2.6.0/ruby/ruby.h:1826:24: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/falcon/.rbenv/versions/2.6.5/include/ruby-2.6.0/ruby/ruby.h:1816:5: note: expanded from macro 'RUBY_CONST_ID_CACHE'
    }
    ^
monitor.c:94:32: note: ')' token is here
    } else if (interests_id == rb_intern("rw")) {
                               ^~~~~~~~~~~~~~~
/Users/falcon/.rbenv/versions/2.6.5/include/ruby-2.6.0/ruby/ruby.h:1826:56: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                                                       ^
monitor.c:97:116: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        rb_raise(rb_eArgError, "invalid event type %s (must be :r, :w, or :rw)", RSTRING_PTR(rb_funcall(interests, rb_intern("inspect"), 0)));
                                                                                                                   ^~~~~~~~~~~~~~~~~~~~
/Users/falcon/.rbenv/versions/2.6.5/include/ruby-2.6.0/ruby/ruby.h:1826:23: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                      ^
/Users/falcon/.rbenv/versions/2.6.5/include/ruby-2.6.0/ruby/ruby.h:2602:20: note: expanded from macro 'rb_funcall'
        rb_funcallv(recv, mid, \
                          ^~~
/Users/falcon/.rbenv/versions/2.6.5/include/ruby-2.6.0/ruby/ruby.h:1003:15: note: expanded from macro 'RSTRING_PTR'
    (!(RBASIC(str)->flags & RSTRING_NOEMBED) ? \
              ^~~
/Users/falcon/.rbenv/versions/2.6.5/include/ruby-2.6.0/ruby/ruby.h:1253:38: note: expanded from macro 'RBASIC'
#define RBASIC(obj)  (R_CAST(RBasic)(obj))
                                     ^~~
monitor.c:97:116: note: '{' token is here
        rb_raise(rb_eArgError, "invalid event type %s (must be :r, :w, or :rw)", RSTRING_PTR(rb_funcall(interests, rb_intern("inspect"), 0)));
                                                                                                                   ^~~~~~~~~~~~~~~~~~~~
/Users/falcon/.rbenv/versions/2.6.5/include/ruby-2.6.0/ruby/ruby.h:1826:24: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/falcon/.rbenv/versions/2.6.5/include/ruby-2.6.0/ruby/ruby.h:1811:5: note: expanded from macro 'RUBY_CONST_ID_CACHE'
    {                                                   \
    ^
/Users/falcon/.rbenv/versions/2.6.5/include/ruby-2.6.0/ruby/ruby.h:2602:20: note: expanded from macro 'rb_funcall'
        rb_funcallv(recv, mid, \
                          ^~~
/Users/falcon/.rbenv/versions/2.6.5/include/ruby-2.6.0/ruby/ruby.h:1003:15: note: expanded from macro 'RSTRING_PTR'
    (!(RBASIC(str)->flags & RSTRING_NOEMBED) ? \
              ^~~
/Users/falcon/.rbenv/versions/2.6.5/include/ruby-2.6.0/ruby/ruby.h:1253:38: note: expanded from macro 'RBASIC'
#define RBASIC(obj)  (R_CAST(RBasic)(obj))
                                     ^~~
monitor.c:97:116: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        rb_raise(rb_eArgError, "invalid event type %s (must be :r, :w, or :rw)", RSTRING_PTR(rb_funcall(interests, rb_intern("inspect"), 0)));
                                                                                                                   ^~~~~~~~~~~~~~~~~~~~
/Users/falcon/.rbenv/versions/2.6.5/include/ruby-2.6.0/ruby/ruby.h:1826:24: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/falcon/.rbenv/versions/2.6.5/include/ruby-2.6.0/ruby/ruby.h:1816:5: note: expanded from macro 'RUBY_CONST_ID_CACHE'
    }
    ^
/Users/falcon/.rbenv/versions/2.6.5/include/ruby-2.6.0/ruby/ruby.h:2602:20: note: expanded from macro 'rb_funcall'
        rb_funcallv(recv, mid, \
                          ^~~
/Users/falcon/.rbenv/versions/2.6.5/include/ruby-2.6.0/ruby/ruby.h:1003:15: note: expanded from macro 'RSTRING_PTR'
    (!(RBASIC(str)->flags & RSTRING_NOEMBED) ? \
              ^~~
/Users/falcon/.rbenv/versions/2.6.5/include/ruby-2.6.0/ruby/ruby.h:1253:38: note: expanded from macro 'RBASIC'
#define RBASIC(obj)  (R_CAST(RBasic)(obj))
                                     ^~~
monitor.c:97:116: note: ')' token is here
        rb_raise(rb_eArgError, "invalid event type %s (must be :r, :w, or :rw)", RSTRING_PTR(rb_funcall(interests, rb_intern("inspect"), 0)));
                                                                                                                   ^~~~~~~~~~~~~~~~~~~~
/Users/falcon/.rbenv/versions/2.6.5/include/ruby-2.6.0/ruby/ruby.h:1826:56: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                                                       ^
/Users/falcon/.rbenv/versions/2.6.5/include/ruby-2.6.0/ruby/ruby.h:2602:20: note: expanded from macro 'rb_funcall'
        rb_funcallv(recv, mid, \
                          ^~~
/Users/falcon/.rbenv/versions/2.6.5/include/ruby-2.6.0/ruby/ruby.h:1003:15: note: expanded from macro 'RSTRING_PTR'
    (!(RBASIC(str)->flags & RSTRING_NOEMBED) ? \
              ^~~
/Users/falcon/.rbenv/versions/2.6.5/include/ruby-2.6.0/ruby/ruby.h:1253:38: note: expanded from macro 'RBASIC'
#define RBASIC(obj)  (R_CAST(RBasic)(obj))
                                     ^~~
monitor.c:97:116: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        rb_raise(rb_eArgError, "invalid event type %s (must be :r, :w, or :rw)", RSTRING_PTR(rb_funcall(interests, rb_intern("inspect"), 0)));
                                                                                                                   ^~~~~~~~~~~~~~~~~~~~
/Users/falcon/.rbenv/versions/2.6.5/include/ruby-2.6.0/ruby/ruby.h:1826:23: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                      ^
/Users/falcon/.rbenv/versions/2.6.5/include/ruby-2.6.0/ruby/ruby.h:2602:20: note: expanded from macro 'rb_funcall'
        rb_funcallv(recv, mid, \
                          ^~~
/Users/falcon/.rbenv/versions/2.6.5/include/ruby-2.6.0/ruby/ruby.h:1004:14: note: expanded from macro 'RSTRING_PTR'
     RSTRING(str)->as.ary : \
             ^~~
/Users/falcon/.rbenv/versions/2.6.5/include/ruby-2.6.0/ruby/ruby.h:1257:39: note: expanded from macro 'RSTRING'
#define RSTRING(obj) (R_CAST(RString)(obj))
                                      ^~~
monitor.c:97:116: note: '{' token is here
        rb_raise(rb_eArgError, "invalid event type %s (must be :r, :w, or :rw)", RSTRING_PTR(rb_funcall(interests, rb_intern("inspect"), 0)));
                                                                                                                   ^~~~~~~~~~~~~~~~~~~~
/Users/falcon/.rbenv/versions/2.6.5/include/ruby-2.6.0/ruby/ruby.h:1826:24: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/falcon/.rbenv/versions/2.6.5/include/ruby-2.6.0/ruby/ruby.h:1811:5: note: expanded from macro 'RUBY_CONST_ID_CACHE'
    {                                                   \
    ^
/Users/falcon/.rbenv/versions/2.6.5/include/ruby-2.6.0/ruby/ruby.h:2602:20: note: expanded from macro 'rb_funcall'
        rb_funcallv(recv, mid, \
                          ^~~
/Users/falcon/.rbenv/versions/2.6.5/include/ruby-2.6.0/ruby/ruby.h:1004:14: note: expanded from macro 'RSTRING_PTR'
     RSTRING(str)->as.ary : \
             ^~~
/Users/falcon/.rbenv/versions/2.6.5/include/ruby-2.6.0/ruby/ruby.h:1257:39: note: expanded from macro 'RSTRING'
#define RSTRING(obj) (R_CAST(RString)(obj))
                                      ^~~
monitor.c:97:116: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        rb_raise(rb_eArgError, "invalid event type %s (must be :r, :w, or :rw)", RSTRING_PTR(rb_funcall(interests, rb_intern("inspect"), 0)));
                                                                                                                   ^~~~~~~~~~~~~~~~~~~~
/Users/falcon/.rbenv/versions/2.6.5/include/ruby-2.6.0/ruby/ruby.h:1826:24: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/falcon/.rbenv/versions/2.6.5/include/ruby-2.6.0/ruby/ruby.h:1816:5: note: expanded from macro 'RUBY_CONST_ID_CACHE'
    }
    ^
/Users/falcon/.rbenv/versions/2.6.5/include/ruby-2.6.0/ruby/ruby.h:2602:20: note: expanded from macro 'rb_funcall'
        rb_funcallv(recv, mid, \
                          ^~~
/Users/falcon/.rbenv/versions/2.6.5/include/ruby-2.6.0/ruby/ruby.h:1004:14: note: expanded from macro 'RSTRING_PTR'
     RSTRING(str)->as.ary : \
             ^~~
/Users/falcon/.rbenv/versions/2.6.5/include/ruby-2.6.0/ruby/ruby.h:1257:39: note: expanded from macro 'RSTRING'
#define RSTRING(obj) (R_CAST(RString)(obj))
                                      ^~~
monitor.c:97:116: note: ')' token is here
        rb_raise(rb_eArgError, "invalid event type %s (must be :r, :w, or :rw)", RSTRING_PTR(rb_funcall(interests, rb_intern("inspect"), 0)));
                                                                                                                   ^~~~~~~~~~~~~~~~~~~~
/Users/falcon/.rbenv/versions/2.6.5/include/ruby-2.6.0/ruby/ruby.h:1826:56: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                                                       ^
/Users/falcon/.rbenv/versions/2.6.5/include/ruby-2.6.0/ruby/ruby.h:2602:20: note: expanded from macro 'rb_funcall'
        rb_funcallv(recv, mid, \
                          ^~~
/Users/falcon/.rbenv/versions/2.6.5/include/ruby-2.6.0/ruby/ruby.h:1004:14: note: expanded from macro 'RSTRING_PTR'
     RSTRING(str)->as.ary : \
             ^~~
/Users/falcon/.rbenv/versions/2.6.5/include/ruby-2.6.0/ruby/ruby.h:1257:39: note: expanded from macro 'RSTRING'
#define RSTRING(obj) (R_CAST(RString)(obj))
                                      ^~~
monitor.c:97:116: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        rb_raise(rb_eArgError, "invalid event type %s (must be :r, :w, or :rw)", RSTRING_PTR(rb_funcall(interests, rb_intern("inspect"), 0)));
                                                                                                                   ^~~~~~~~~~~~~~~~~~~~
/Users/falcon/.rbenv/versions/2.6.5/include/ruby-2.6.0/ruby/ruby.h:1826:23: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                      ^
/Users/falcon/.rbenv/versions/2.6.5/include/ruby-2.6.0/ruby/ruby.h:2602:20: note: expanded from macro 'rb_funcall'
        rb_funcallv(recv, mid, \
                          ^~~
/Users/falcon/.rbenv/versions/2.6.5/include/ruby-2.6.0/ruby/ruby.h:1005:14: note: expanded from macro 'RSTRING_PTR'
     RSTRING(str)->as.heap.ptr)
             ^~~
/Users/falcon/.rbenv/versions/2.6.5/include/ruby-2.6.0/ruby/ruby.h:1257:39: note: expanded from macro 'RSTRING'
#define RSTRING(obj) (R_CAST(RString)(obj))
                                      ^~~
monitor.c:97:116: note: '{' token is here
        rb_raise(rb_eArgError, "invalid event type %s (must be :r, :w, or :rw)", RSTRING_PTR(rb_funcall(interests, rb_intern("inspect"), 0)));
                                                                                                                   ^~~~~~~~~~~~~~~~~~~~
/Users/falcon/.rbenv/versions/2.6.5/include/ruby-2.6.0/ruby/ruby.h:1826:24: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/falcon/.rbenv/versions/2.6.5/include/ruby-2.6.0/ruby/ruby.h:1811:5: note: expanded from macro 'RUBY_CONST_ID_CACHE'
    {                                                   \
    ^
/Users/falcon/.rbenv/versions/2.6.5/include/ruby-2.6.0/ruby/ruby.h:2602:20: note: expanded from macro 'rb_funcall'
        rb_funcallv(recv, mid, \
                          ^~~
/Users/falcon/.rbenv/versions/2.6.5/include/ruby-2.6.0/ruby/ruby.h:1005:14: note: expanded from macro 'RSTRING_PTR'
     RSTRING(str)->as.heap.ptr)
             ^~~
/Users/falcon/.rbenv/versions/2.6.5/include/ruby-2.6.0/ruby/ruby.h:1257:39: note: expanded from macro 'RSTRING'
#define RSTRING(obj) (R_CAST(RString)(obj))
                                      ^~~
monitor.c:97:116: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        rb_raise(rb_eArgError, "invalid event type %s (must be :r, :w, or :rw)", RSTRING_PTR(rb_funcall(interests, rb_intern("inspect"), 0)));
                                                                                                                   ^~~~~~~~~~~~~~~~~~~~
/Users/falcon/.rbenv/versions/2.6.5/include/ruby-2.6.0/ruby/ruby.h:1826:24: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/falcon/.rbenv/versions/2.6.5/include/ruby-2.6.0/ruby/ruby.h:1816:5: note: expanded from macro 'RUBY_CONST_ID_CACHE'
    }
    ^
/Users/falcon/.rbenv/versions/2.6.5/include/ruby-2.6.0/ruby/ruby.h:2602:20: note: expanded from macro 'rb_funcall'
        rb_funcallv(recv, mid, \
                          ^~~
/Users/falcon/.rbenv/versions/2.6.5/include/ruby-2.6.0/ruby/ruby.h:1005:14: note: expanded from macro 'RSTRING_PTR'
     RSTRING(str)->as.heap.ptr)
             ^~~
/Users/falcon/.rbenv/versions/2.6.5/include/ruby-2.6.0/ruby/ruby.h:1257:39: note: expanded from macro 'RSTRING'
#define RSTRING(obj) (R_CAST(RString)(obj))
                                      ^~~
monitor.c:97:116: note: ')' token is here
        rb_raise(rb_eArgError, "invalid event type %s (must be :r, :w, or :rw)", RSTRING_PTR(rb_funcall(interests, rb_intern("inspect"), 0)));
                                                                                                                   ^~~~~~~~~~~~~~~~~~~~
/Users/falcon/.rbenv/versions/2.6.5/include/ruby-2.6.0/ruby/ruby.h:1826:56: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                                                       ^
/Users/falcon/.rbenv/versions/2.6.5/include/ruby-2.6.0/ruby/ruby.h:2602:20: note: expanded from macro 'rb_funcall'
        rb_funcallv(recv, mid, \
                          ^~~
/Users/falcon/.rbenv/versions/2.6.5/include/ruby-2.6.0/ruby/ruby.h:1005:14: note: expanded from macro 'RSTRING_PTR'
     RSTRING(str)->as.heap.ptr)
             ^~~
/Users/falcon/.rbenv/versions/2.6.5/include/ruby-2.6.0/ruby/ruby.h:1257:39: note: expanded from macro 'RSTRING'
#define RSTRING(obj) (R_CAST(RString)(obj))
                                      ^~~
monitor.c:103:23: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    rb_ivar_set(self, rb_intern("io"), io);
                      ^~~~~~~~~~~~~~~
/Users/falcon/.rbenv/versions/2.6.5/include/ruby-2.6.0/ruby/ruby.h:1826:23: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                      ^
monitor.c:103:23: note: '{' token is here
    rb_ivar_set(self, rb_intern("io"), io);
                      ^~~~~~~~~~~~~~~
/Users/falcon/.rbenv/versions/2.6.5/include/ruby-2.6.0/ruby/ruby.h:1826:24: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/falcon/.rbenv/versions/2.6.5/include/ruby-2.6.0/ruby/ruby.h:1811:5: note: expanded from macro 'RUBY_CONST_ID_CACHE'
    {                                                   \
    ^
monitor.c:103:23: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    rb_ivar_set(self, rb_intern("io"), io);
                      ^~~~~~~~~~~~~~~
/Users/falcon/.rbenv/versions/2.6.5/include/ruby-2.6.0/ruby/ruby.h:1826:24: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/falcon/.rbenv/versions/2.6.5/include/ruby-2.6.0/ruby/ruby.h:1816:5: note: expanded from macro 'RUBY_CONST_ID_CACHE'
    }
    ^
monitor.c:103:23: note: ')' token is here
    rb_ivar_set(self, rb_intern("io"), io);
                      ^~~~~~~~~~~~~~~
/Users/falcon/.rbenv/versions/2.6.5/include/ruby-2.6.0/ruby/ruby.h:1826:56: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                                                       ^
monitor.c:104:23: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    rb_ivar_set(self, rb_intern("interests"), interests);
                      ^~~~~~~~~~~~~~~~~~~~~~
/Users/falcon/.rbenv/versions/2.6.5/include/ruby-2.6.0/ruby/ruby.h:1826:23: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                      ^
monitor.c:104:23: note: '{' token is here
    rb_ivar_set(self, rb_intern("interests"), interests);
                      ^~~~~~~~~~~~~~~~~~~~~~
/Users/falcon/.rbenv/versions/2.6.5/include/ruby-2.6.0/ruby/ruby.h:1826:24: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/falcon/.rbenv/versions/2.6.5/include/ruby-2.6.0/ruby/ruby.h:1811:5: note: expanded from macro 'RUBY_CONST_ID_CACHE'
    {                                                   \
    ^
monitor.c:104:23: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    rb_ivar_set(self, rb_intern("interests"), interests);
                      ^~~~~~~~~~~~~~~~~~~~~~
/Users/falcon/.rbenv/versions/2.6.5/include/ruby-2.6.0/ruby/ruby.h:1826:24: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/falcon/.rbenv/versions/2.6.5/include/ruby-2.6.0/ruby/ruby.h:1816:5: note: expanded from macro 'RUBY_CONST_ID_CACHE'
    }
    ^
monitor.c:104:23: note: ')' token is here
    rb_ivar_set(self, rb_intern("interests"), interests);
                      ^~~~~~~~~~~~~~~~~~~~~~
/Users/falcon/.rbenv/versions/2.6.5/include/ruby-2.6.0/ruby/ruby.h:1826:56: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                                                       ^
monitor.c:105:23: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    rb_ivar_set(self, rb_intern("selector"), selector_obj);
                      ^~~~~~~~~~~~~~~~~~~~~
/Users/falcon/.rbenv/versions/2.6.5/include/ruby-2.6.0/ruby/ruby.h:1826:23: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                      ^
monitor.c:105:23: note: '{' token is here
    rb_ivar_set(self, rb_intern("selector"), selector_obj);
                      ^~~~~~~~~~~~~~~~~~~~~
/Users/falcon/.rbenv/versions/2.6.5/include/ruby-2.6.0/ruby/ruby.h:1826:24: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/falcon/.rbenv/versions/2.6.5/include/ruby-2.6.0/ruby/ruby.h:1811:5: note: expanded from macro 'RUBY_CONST_ID_CACHE'
    {                                                   \
    ^
monitor.c:105:23: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    rb_ivar_set(self, rb_intern("selector"), selector_obj);
                      ^~~~~~~~~~~~~~~~~~~~~
/Users/falcon/.rbenv/versions/2.6.5/include/ruby-2.6.0/ruby/ruby.h:1826:24: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/falcon/.rbenv/versions/2.6.5/include/ruby-2.6.0/ruby/ruby.h:1816:5: note: expanded from macro 'RUBY_CONST_ID_CACHE'
    }
    ^
monitor.c:105:23: note: ')' token is here
    rb_ivar_set(self, rb_intern("selector"), selector_obj);
                      ^~~~~~~~~~~~~~~~~~~~~
/Users/falcon/.rbenv/versions/2.6.5/include/ruby-2.6.0/ruby/ruby.h:1826:56: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                                                       ^
monitor.c:130:34: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    selector = rb_ivar_get(self, rb_intern("selector"));
                                 ^~~~~~~~~~~~~~~~~~~~~
/Users/falcon/.rbenv/versions/2.6.5/include/ruby-2.6.0/ruby/ruby.h:1826:23: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                      ^
monitor.c:130:34: note: '{' token is here
    selector = rb_ivar_get(self, rb_intern("selector"));
                                 ^~~~~~~~~~~~~~~~~~~~~
/Users/falcon/.rbenv/versions/2.6.5/include/ruby-2.6.0/ruby/ruby.h:1826:24: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/falcon/.rbenv/versions/2.6.5/include/ruby-2.6.0/ruby/ruby.h:1811:5: note: expanded from macro 'RUBY_CONST_ID_CACHE'
    {                                                   \
    ^
monitor.c:130:34: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    selector = rb_ivar_get(self, rb_intern("selector"));
                                 ^~~~~~~~~~~~~~~~~~~~~
/Users/falcon/.rbenv/versions/2.6.5/include/ruby-2.6.0/ruby/ruby.h:1826:24: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/falcon/.rbenv/versions/2.6.5/include/ruby-2.6.0/ruby/ruby.h:1816:5: note: expanded from macro 'RUBY_CONST_ID_CACHE'
    }
    ^
monitor.c:130:34: note: ')' token is here
    selector = rb_ivar_get(self, rb_intern("selector"));
                                 ^~~~~~~~~~~~~~~~~~~~~
/Users/falcon/.rbenv/versions/2.6.5/include/ruby-2.6.0/ruby/ruby.h:1826:56: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                                                       ^
monitor.c:139:27: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        rb_ivar_set(self, rb_intern("selector"), Qnil);
                          ^~~~~~~~~~~~~~~~~~~~~
/Users/falcon/.rbenv/versions/2.6.5/include/ruby-2.6.0/ruby/ruby.h:1826:23: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                      ^
monitor.c:139:27: note: '{' token is here
        rb_ivar_set(self, rb_intern("selector"), Qnil);
                          ^~~~~~~~~~~~~~~~~~~~~
/Users/falcon/.rbenv/versions/2.6.5/include/ruby-2.6.0/ruby/ruby.h:1826:24: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/falcon/.rbenv/versions/2.6.5/include/ruby-2.6.0/ruby/ruby.h:1811:5: note: expanded from macro 'RUBY_CONST_ID_CACHE'
    {                                                   \
    ^
monitor.c:139:27: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        rb_ivar_set(self, rb_intern("selector"), Qnil);
                          ^~~~~~~~~~~~~~~~~~~~~
/Users/falcon/.rbenv/versions/2.6.5/include/ruby-2.6.0/ruby/ruby.h:1826:24: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/falcon/.rbenv/versions/2.6.5/include/ruby-2.6.0/ruby/ruby.h:1816:5: note: expanded from macro 'RUBY_CONST_ID_CACHE'
    }
    ^
monitor.c:139:27: note: ')' token is here
        rb_ivar_set(self, rb_intern("selector"), Qnil);
                          ^~~~~~~~~~~~~~~~~~~~~
/Users/falcon/.rbenv/versions/2.6.5/include/ruby-2.6.0/ruby/ruby.h:1826:56: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                                                       ^
monitor.c:143:80: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
            rb_funcall(selector, rb_intern("deregister"), 1, rb_ivar_get(self, rb_intern("io")));
                                                                               ^~~~~~~~~~~~~~~
/Users/falcon/.rbenv/versions/2.6.5/include/ruby-2.6.0/ruby/ruby.h:1826:23: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                      ^
/Users/falcon/.rbenv/versions/2.6.5/include/ruby-2.6.0/ruby/ruby.h:2599:35: note: expanded from macro 'rb_funcall'
        const VALUE rb_funcall_args[] = {__VA_ARGS__}; \
                                         ^~~~~~~~~~~
monitor.c:143:80: note: '{' token is here
            rb_funcall(selector, rb_intern("deregister"), 1, rb_ivar_get(self, rb_intern("io")));
                                                                               ^~~~~~~~~~~~~~~
/Users/falcon/.rbenv/versions/2.6.5/include/ruby-2.6.0/ruby/ruby.h:1826:24: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/falcon/.rbenv/versions/2.6.5/include/ruby-2.6.0/ruby/ruby.h:1811:5: note: expanded from macro 'RUBY_CONST_ID_CACHE'
    {                                                   \
    ^
/Users/falcon/.rbenv/versions/2.6.5/include/ruby-2.6.0/ruby/ruby.h:2599:35: note: expanded from macro 'rb_funcall'
        const VALUE rb_funcall_args[] = {__VA_ARGS__}; \
                                         ^~~~~~~~~~~
monitor.c:143:80: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
            rb_funcall(selector, rb_intern("deregister"), 1, rb_ivar_get(self, rb_intern("io")));
                                                                               ^~~~~~~~~~~~~~~
/Users/falcon/.rbenv/versions/2.6.5/include/ruby-2.6.0/ruby/ruby.h:1826:24: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/falcon/.rbenv/versions/2.6.5/include/ruby-2.6.0/ruby/ruby.h:1816:5: note: expanded from macro 'RUBY_CONST_ID_CACHE'
    }
    ^
/Users/falcon/.rbenv/versions/2.6.5/include/ruby-2.6.0/ruby/ruby.h:2599:35: note: expanded from macro 'rb_funcall'
        const VALUE rb_funcall_args[] = {__VA_ARGS__}; \
                                         ^~~~~~~~~~~
monitor.c:143:80: note: ')' token is here
            rb_funcall(selector, rb_intern("deregister"), 1, rb_ivar_get(self, rb_intern("io")));
                                                                               ^~~~~~~~~~~~~~~
/Users/falcon/.rbenv/versions/2.6.5/include/ruby-2.6.0/ruby/ruby.h:1826:56: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                                                       ^
/Users/falcon/.rbenv/versions/2.6.5/include/ruby-2.6.0/ruby/ruby.h:2599:35: note: expanded from macro 'rb_funcall'
        const VALUE rb_funcall_args[] = {__VA_ARGS__}; \
                                         ^~~~~~~~~~~
monitor.c:143:34: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
            rb_funcall(selector, rb_intern("deregister"), 1, rb_ivar_get(self, rb_intern("io")));
                                 ^~~~~~~~~~~~~~~~~~~~~~~
/Users/falcon/.rbenv/versions/2.6.5/include/ruby-2.6.0/ruby/ruby.h:1826:23: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                      ^
/Users/falcon/.rbenv/versions/2.6.5/include/ruby-2.6.0/ruby/ruby.h:2602:20: note: expanded from macro 'rb_funcall'
        rb_funcallv(recv, mid, \
                          ^~~
monitor.c:143:34: note: '{' token is here
            rb_funcall(selector, rb_intern("deregister"), 1, rb_ivar_get(self, rb_intern("io")));
                                 ^~~~~~~~~~~~~~~~~~~~~~~
/Users/falcon/.rbenv/versions/2.6.5/include/ruby-2.6.0/ruby/ruby.h:1826:24: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/falcon/.rbenv/versions/2.6.5/include/ruby-2.6.0/ruby/ruby.h:1811:5: note: expanded from macro 'RUBY_CONST_ID_CACHE'
    {                                                   \
    ^
/Users/falcon/.rbenv/versions/2.6.5/include/ruby-2.6.0/ruby/ruby.h:2602:20: note: expanded from macro 'rb_funcall'
        rb_funcallv(recv, mid, \
                          ^~~
monitor.c:143:34: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
            rb_funcall(selector, rb_intern("deregister"), 1, rb_ivar_get(self, rb_intern("io")));
                                 ^~~~~~~~~~~~~~~~~~~~~~~
/Users/falcon/.rbenv/versions/2.6.5/include/ruby-2.6.0/ruby/ruby.h:1826:24: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/falcon/.rbenv/versions/2.6.5/include/ruby-2.6.0/ruby/ruby.h:1816:5: note: expanded from macro 'RUBY_CONST_ID_CACHE'
    }
    ^
/Users/falcon/.rbenv/versions/2.6.5/include/ruby-2.6.0/ruby/ruby.h:2602:20: note: expanded from macro 'rb_funcall'
        rb_funcallv(recv, mid, \
                          ^~~
monitor.c:143:34: note: ')' token is here
            rb_funcall(selector, rb_intern("deregister"), 1, rb_ivar_get(self, rb_intern("io")));
                                 ^~~~~~~~~~~~~~~~~~~~~~~
/Users/falcon/.rbenv/versions/2.6.5/include/ruby-2.6.0/ruby/ruby.h:1826:56: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                                                       ^
/Users/falcon/.rbenv/versions/2.6.5/include/ruby-2.6.0/ruby/ruby.h:2602:20: note: expanded from macro 'rb_funcall'
        rb_funcallv(recv, mid, \
                          ^~~
monitor.c:160:30: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    return rb_ivar_get(self, rb_intern("io"));
                             ^~~~~~~~~~~~~~~
/Users/falcon/.rbenv/versions/2.6.5/include/ruby-2.6.0/ruby/ruby.h:1826:23: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                      ^
monitor.c:160:30: note: '{' token is here
    return rb_ivar_get(self, rb_intern("io"));
                             ^~~~~~~~~~~~~~~
/Users/falcon/.rbenv/versions/2.6.5/include/ruby-2.6.0/ruby/ruby.h:1826:24: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/falcon/.rbenv/versions/2.6.5/include/ruby-2.6.0/ruby/ruby.h:1811:5: note: expanded from macro 'RUBY_CONST_ID_CACHE'
    {                                                   \
    ^
monitor.c:160:30: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    return rb_ivar_get(self, rb_intern("io"));
                             ^~~~~~~~~~~~~~~
/Users/falcon/.rbenv/versions/2.6.5/include/ruby-2.6.0/ruby/ruby.h:1826:24: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/falcon/.rbenv/versions/2.6.5/include/ruby-2.6.0/ruby/ruby.h:1816:5: note: expanded from macro 'RUBY_CONST_ID_CACHE'
    }
    ^
monitor.c:160:30: note: ')' token is here
    return rb_ivar_get(self, rb_intern("io"));
                             ^~~~~~~~~~~~~~~
/Users/falcon/.rbenv/versions/2.6.5/include/ruby-2.6.0/ruby/ruby.h:1826:56: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                                                       ^
monitor.c:165:30: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    return rb_ivar_get(self, rb_intern("interests"));
                             ^~~~~~~~~~~~~~~~~~~~~~
/Users/falcon/.rbenv/versions/2.6.5/include/ruby-2.6.0/ruby/ruby.h:1826:23: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                      ^
monitor.c:165:30: note: '{' token is here
    return rb_ivar_get(self, rb_intern("interests"));
                             ^~~~~~~~~~~~~~~~~~~~~~
/Users/falcon/.rbenv/versions/2.6.5/include/ruby-2.6.0/ruby/ruby.h:1826:24: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/falcon/.rbenv/versions/2.6.5/include/ruby-2.6.0/ruby/ruby.h:1811:5: note: expanded from macro 'RUBY_CONST_ID_CACHE'
    {                                                   \
    ^
monitor.c:165:30: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    return rb_ivar_get(self, rb_intern("interests"));
                             ^~~~~~~~~~~~~~~~~~~~~~
/Users/falcon/.rbenv/versions/2.6.5/include/ruby-2.6.0/ruby/ruby.h:1826:24: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/falcon/.rbenv/versions/2.6.5/include/ruby-2.6.0/ruby/ruby.h:1816:5: note: expanded from macro 'RUBY_CONST_ID_CACHE'
    }
    ^
monitor.c:165:30: note: ')' token is here
    return rb_ivar_get(self, rb_intern("interests"));
                             ^~~~~~~~~~~~~~~~~~~~~~
/Users/falcon/.rbenv/versions/2.6.5/include/ruby-2.6.0/ruby/ruby.h:1826:56: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                                                       ^
monitor.c:176:30: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    return rb_ivar_get(self, rb_intern("interests"));
                             ^~~~~~~~~~~~~~~~~~~~~~
/Users/falcon/.rbenv/versions/2.6.5/include/ruby-2.6.0/ruby/ruby.h:1826:23: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                      ^
monitor.c:176:30: note: '{' token is here
    return rb_ivar_get(self, rb_intern("interests"));
                             ^~~~~~~~~~~~~~~~~~~~~~
/Users/falcon/.rbenv/versions/2.6.5/include/ruby-2.6.0/ruby/ruby.h:1826:24: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/falcon/.rbenv/versions/2.6.5/include/ruby-2.6.0/ruby/ruby.h:1811:5: note: expanded from macro 'RUBY_CONST_ID_CACHE'
    {                                                   \
    ^
monitor.c:176:30: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    return rb_ivar_get(self, rb_intern("interests"));
                             ^~~~~~~~~~~~~~~~~~~~~~
/Users/falcon/.rbenv/versions/2.6.5/include/ruby-2.6.0/ruby/ruby.h:1826:24: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/falcon/.rbenv/versions/2.6.5/include/ruby-2.6.0/ruby/ruby.h:1816:5: note: expanded from macro 'RUBY_CONST_ID_CACHE'
    }
    ^
monitor.c:176:30: note: ')' token is here
    return rb_ivar_get(self, rb_intern("interests"));
                             ^~~~~~~~~~~~~~~~~~~~~~
/Users/falcon/.rbenv/versions/2.6.5/include/ruby-2.6.0/ruby/ruby.h:1826:56: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                                                       ^
monitor.c:187:30: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    return rb_ivar_get(self, rb_intern("interests"));
                             ^~~~~~~~~~~~~~~~~~~~~~
/Users/falcon/.rbenv/versions/2.6.5/include/ruby-2.6.0/ruby/ruby.h:1826:23: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                      ^
monitor.c:187:30: note: '{' token is here
    return rb_ivar_get(self, rb_intern("interests"));
                             ^~~~~~~~~~~~~~~~~~~~~~
/Users/falcon/.rbenv/versions/2.6.5/include/ruby-2.6.0/ruby/ruby.h:1826:24: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/falcon/.rbenv/versions/2.6.5/include/ruby-2.6.0/ruby/ruby.h:1811:5: note: expanded from macro 'RUBY_CONST_ID_CACHE'
    {                                                   \
    ^
monitor.c:187:30: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    return rb_ivar_get(self, rb_intern("interests"));
                             ^~~~~~~~~~~~~~~~~~~~~~
/Users/falcon/.rbenv/versions/2.6.5/include/ruby-2.6.0/ruby/ruby.h:1826:24: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/falcon/.rbenv/versions/2.6.5/include/ruby-2.6.0/ruby/ruby.h:1816:5: note: expanded from macro 'RUBY_CONST_ID_CACHE'
    }
    ^
monitor.c:187:30: note: ')' token is here
    return rb_ivar_get(self, rb_intern("interests"));
                             ^~~~~~~~~~~~~~~~~~~~~~
/Users/falcon/.rbenv/versions/2.6.5/include/ruby-2.6.0/ruby/ruby.h:1826:56: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                                                       ^
monitor.c:185:40: warning: implicit conversion loses integer precision: 'VALUE' (aka 'unsigned long') to 'int' [-Wshorten-64-to-32]
    NIO_Monitor_update_interests(self, interest);
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~       ^~~~~~~~
monitor.c:198:30: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    return rb_ivar_get(self, rb_intern("interests"));
                             ^~~~~~~~~~~~~~~~~~~~~~
/Users/falcon/.rbenv/versions/2.6.5/include/ruby-2.6.0/ruby/ruby.h:1826:23: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                      ^
monitor.c:198:30: note: '{' token is here
    return rb_ivar_get(self, rb_intern("interests"));
                             ^~~~~~~~~~~~~~~~~~~~~~
/Users/falcon/.rbenv/versions/2.6.5/include/ruby-2.6.0/ruby/ruby.h:1826:24: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/falcon/.rbenv/versions/2.6.5/include/ruby-2.6.0/ruby/ruby.h:1811:5: note: expanded from macro 'RUBY_CONST_ID_CACHE'
    {                                                   \
    ^
monitor.c:198:30: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    return rb_ivar_get(self, rb_intern("interests"));
                             ^~~~~~~~~~~~~~~~~~~~~~
/Users/falcon/.rbenv/versions/2.6.5/include/ruby-2.6.0/ruby/ruby.h:1826:24: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/falcon/.rbenv/versions/2.6.5/include/ruby-2.6.0/ruby/ruby.h:1816:5: note: expanded from macro 'RUBY_CONST_ID_CACHE'
    }
    ^
monitor.c:198:30: note: ')' token is here
    return rb_ivar_get(self, rb_intern("interests"));
                             ^~~~~~~~~~~~~~~~~~~~~~
/Users/falcon/.rbenv/versions/2.6.5/include/ruby-2.6.0/ruby/ruby.h:1826:56: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                                                       ^
monitor.c:196:40: warning: implicit conversion loses integer precision: 'VALUE' (aka 'unsigned long') to 'int' [-Wshorten-64-to-32]
    NIO_Monitor_update_interests(self, interest);
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~       ^~~~~~~~
monitor.c:203:30: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    return rb_ivar_get(self, rb_intern("selector"));
                             ^~~~~~~~~~~~~~~~~~~~~
/Users/falcon/.rbenv/versions/2.6.5/include/ruby-2.6.0/ruby/ruby.h:1826:23: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                      ^
monitor.c:203:30: note: '{' token is here
    return rb_ivar_get(self, rb_intern("selector"));
                             ^~~~~~~~~~~~~~~~~~~~~
/Users/falcon/.rbenv/versions/2.6.5/include/ruby-2.6.0/ruby/ruby.h:1826:24: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/falcon/.rbenv/versions/2.6.5/include/ruby-2.6.0/ruby/ruby.h:1811:5: note: expanded from macro 'RUBY_CONST_ID_CACHE'
    {                                                   \
    ^
monitor.c:203:30: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    return rb_ivar_get(self, rb_intern("selector"));
                             ^~~~~~~~~~~~~~~~~~~~~
/Users/falcon/.rbenv/versions/2.6.5/include/ruby-2.6.0/ruby/ruby.h:1826:24: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/falcon/.rbenv/versions/2.6.5/include/ruby-2.6.0/ruby/ruby.h:1816:5: note: expanded from macro 'RUBY_CONST_ID_CACHE'
    }
    ^
monitor.c:203:30: note: ')' token is here
    return rb_ivar_get(self, rb_intern("selector"));
                             ^~~~~~~~~~~~~~~~~~~~~
/Users/falcon/.rbenv/versions/2.6.5/include/ruby-2.6.0/ruby/ruby.h:1826:56: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                                                       ^
monitor.c:208:30: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    return rb_ivar_get(self, rb_intern("value"));
                             ^~~~~~~~~~~~~~~~~~
/Users/falcon/.rbenv/versions/2.6.5/include/ruby-2.6.0/ruby/ruby.h:1826:23: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                      ^
monitor.c:208:30: note: '{' token is here
    return rb_ivar_get(self, rb_intern("value"));
                             ^~~~~~~~~~~~~~~~~~
/Users/falcon/.rbenv/versions/2.6.5/include/ruby-2.6.0/ruby/ruby.h:1826:24: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/falcon/.rbenv/versions/2.6.5/include/ruby-2.6.0/ruby/ruby.h:1811:5: note: expanded from macro 'RUBY_CONST_ID_CACHE'
    {                                                   \
    ^
monitor.c:208:30: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    return rb_ivar_get(self, rb_intern("value"));
                             ^~~~~~~~~~~~~~~~~~
/Users/falcon/.rbenv/versions/2.6.5/include/ruby-2.6.0/ruby/ruby.h:1826:24: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/falcon/.rbenv/versions/2.6.5/include/ruby-2.6.0/ruby/ruby.h:1816:5: note: expanded from macro 'RUBY_CONST_ID_CACHE'
    }
    ^
monitor.c:208:30: note: ')' token is here
    return rb_ivar_get(self, rb_intern("value"));
                             ^~~~~~~~~~~~~~~~~~
/Users/falcon/.rbenv/versions/2.6.5/include/ruby-2.6.0/ruby/ruby.h:1826:56: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                                                       ^
monitor.c:213:30: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    return rb_ivar_set(self, rb_intern("value"), obj);
                             ^~~~~~~~~~~~~~~~~~
/Users/falcon/.rbenv/versions/2.6.5/include/ruby-2.6.0/ruby/ruby.h:1826:23: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                      ^
monitor.c:213:30: note: '{' token is here
    return rb_ivar_set(self, rb_intern("value"), obj);
                             ^~~~~~~~~~~~~~~~~~
/Users/falcon/.rbenv/versions/2.6.5/include/ruby-2.6.0/ruby/ruby.h:1826:24: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/falcon/.rbenv/versions/2.6.5/include/ruby-2.6.0/ruby/ruby.h:1811:5: note: expanded from macro 'RUBY_CONST_ID_CACHE'
    {                                                   \
    ^
monitor.c:213:30: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    return rb_ivar_set(self, rb_intern("value"), obj);
                             ^~~~~~~~~~~~~~~~~~
/Users/falcon/.rbenv/versions/2.6.5/include/ruby-2.6.0/ruby/ruby.h:1826:24: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/falcon/.rbenv/versions/2.6.5/include/ruby-2.6.0/ruby/ruby.h:1816:5: note: expanded from macro 'RUBY_CONST_ID_CACHE'
    }
    ^
monitor.c:213:30: note: ')' token is here
    return rb_ivar_set(self, rb_intern("value"), obj);
                             ^~~~~~~~~~~~~~~~~~
/Users/falcon/.rbenv/versions/2.6.5/include/ruby-2.6.0/ruby/ruby.h:1826:56: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                                                       ^
monitor.c:222:23: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        return ID2SYM(rb_intern("rw"));
                      ^~~~~~~~~~~~~~~
/Users/falcon/.rbenv/versions/2.6.5/include/ruby-2.6.0/ruby/ruby.h:1826:23: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                      ^
/Users/falcon/.rbenv/versions/2.6.5/include/ruby-2.6.0/ruby/ruby.h:413:29: note: expanded from macro 'ID2SYM'
#define ID2SYM(x) RB_ID2SYM(x)
                            ^
/Users/falcon/.rbenv/versions/2.6.5/include/ruby-2.6.0/ruby/ruby.h:408:33: note: expanded from macro 'RB_ID2SYM'
#define RB_ID2SYM(x) (rb_id2sym(x))
                                ^
monitor.c:222:23: note: '{' token is here
        return ID2SYM(rb_intern("rw"));
                      ^~~~~~~~~~~~~~~
/Users/falcon/.rbenv/versions/2.6.5/include/ruby-2.6.0/ruby/ruby.h:1826:24: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/falcon/.rbenv/versions/2.6.5/include/ruby-2.6.0/ruby/ruby.h:1811:5: note: expanded from macro 'RUBY_CONST_ID_CACHE'
    {                                                   \
    ^
/Users/falcon/.rbenv/versions/2.6.5/include/ruby-2.6.0/ruby/ruby.h:413:29: note: expanded from macro 'ID2SYM'
#define ID2SYM(x) RB_ID2SYM(x)
                            ^
/Users/falcon/.rbenv/versions/2.6.5/include/ruby-2.6.0/ruby/ruby.h:408:33: note: expanded from macro 'RB_ID2SYM'
#define RB_ID2SYM(x) (rb_id2sym(x))
                                ^
monitor.c:222:23: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        return ID2SYM(rb_intern("rw"));
                      ^~~~~~~~~~~~~~~
/Users/falcon/.rbenv/versions/2.6.5/include/ruby-2.6.0/ruby/ruby.h:1826:24: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/falcon/.rbenv/versions/2.6.5/include/ruby-2.6.0/ruby/ruby.h:1816:5: note: expanded from macro 'RUBY_CONST_ID_CACHE'
    }
    ^
/Users/falcon/.rbenv/versions/2.6.5/include/ruby-2.6.0/ruby/ruby.h:413:29: note: expanded from macro 'ID2SYM'
#define ID2SYM(x) RB_ID2SYM(x)
                            ^
/Users/falcon/.rbenv/versions/2.6.5/include/ruby-2.6.0/ruby/ruby.h:408:33: note: expanded from macro 'RB_ID2SYM'
#define RB_ID2SYM(x) (rb_id2sym(x))
                                ^
monitor.c:222:23: note: ')' token is here
        return ID2SYM(rb_intern("rw"));
                      ^~~~~~~~~~~~~~~
/Users/falcon/.rbenv/versions/2.6.5/include/ruby-2.6.0/ruby/ruby.h:1826:56: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                                                       ^
/Users/falcon/.rbenv/versions/2.6.5/include/ruby-2.6.0/ruby/ruby.h:413:29: note: expanded from macro 'ID2SYM'
#define ID2SYM(x) RB_ID2SYM(x)
                            ^
/Users/falcon/.rbenv/versions/2.6.5/include/ruby-2.6.0/ruby/ruby.h:408:33: note: expanded from macro 'RB_ID2SYM'
#define RB_ID2SYM(x) (rb_id2sym(x))
                                ^
monitor.c:224:23: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        return ID2SYM(rb_intern("r"));
                      ^~~~~~~~~~~~~~
/Users/falcon/.rbenv/versions/2.6.5/include/ruby-2.6.0/ruby/ruby.h:1826:23: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                      ^
/Users/falcon/.rbenv/versions/2.6.5/include/ruby-2.6.0/ruby/ruby.h:413:29: note: expanded from macro 'ID2SYM'
#define ID2SYM(x) RB_ID2SYM(x)
                            ^
/Users/falcon/.rbenv/versions/2.6.5/include/ruby-2.6.0/ruby/ruby.h:408:33: note: expanded from macro 'RB_ID2SYM'
#define RB_ID2SYM(x) (rb_id2sym(x))
                                ^
monitor.c:224:23: note: '{' token is here
        return ID2SYM(rb_intern("r"));
                      ^~~~~~~~~~~~~~
/Users/falcon/.rbenv/versions/2.6.5/include/ruby-2.6.0/ruby/ruby.h:1826:24: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/falcon/.rbenv/versions/2.6.5/include/ruby-2.6.0/ruby/ruby.h:1811:5: note: expanded from macro 'RUBY_CONST_ID_CACHE'
    {                                                   \
    ^
/Users/falcon/.rbenv/versions/2.6.5/include/ruby-2.6.0/ruby/ruby.h:413:29: note: expanded from macro 'ID2SYM'
#define ID2SYM(x) RB_ID2SYM(x)
                            ^
/Users/falcon/.rbenv/versions/2.6.5/include/ruby-2.6.0/ruby/ruby.h:408:33: note: expanded from macro 'RB_ID2SYM'
#define RB_ID2SYM(x) (rb_id2sym(x))
                                ^
monitor.c:224:23: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        return ID2SYM(rb_intern("r"));
                      ^~~~~~~~~~~~~~
/Users/falcon/.rbenv/versions/2.6.5/include/ruby-2.6.0/ruby/ruby.h:1826:24: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/falcon/.rbenv/versions/2.6.5/include/ruby-2.6.0/ruby/ruby.h:1816:5: note: expanded from macro 'RUBY_CONST_ID_CACHE'
    }
    ^
/Users/falcon/.rbenv/versions/2.6.5/include/ruby-2.6.0/ruby/ruby.h:413:29: note: expanded from macro 'ID2SYM'
#define ID2SYM(x) RB_ID2SYM(x)
                            ^
/Users/falcon/.rbenv/versions/2.6.5/include/ruby-2.6.0/ruby/ruby.h:408:33: note: expanded from macro 'RB_ID2SYM'
#define RB_ID2SYM(x) (rb_id2sym(x))
                                ^
monitor.c:224:23: note: ')' token is here
        return ID2SYM(rb_intern("r"));
                      ^~~~~~~~~~~~~~
/Users/falcon/.rbenv/versions/2.6.5/include/ruby-2.6.0/ruby/ruby.h:1826:56: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                                                       ^
/Users/falcon/.rbenv/versions/2.6.5/include/ruby-2.6.0/ruby/ruby.h:413:29: note: expanded from macro 'ID2SYM'
#define ID2SYM(x) RB_ID2SYM(x)
                            ^
/Users/falcon/.rbenv/versions/2.6.5/include/ruby-2.6.0/ruby/ruby.h:408:33: note: expanded from macro 'RB_ID2SYM'
#define RB_ID2SYM(x) (rb_id2sym(x))
                                ^
monitor.c:226:23: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        return ID2SYM(rb_intern("w"));
                      ^~~~~~~~~~~~~~
/Users/falcon/.rbenv/versions/2.6.5/include/ruby-2.6.0/ruby/ruby.h:1826:23: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                      ^
/Users/falcon/.rbenv/versions/2.6.5/include/ruby-2.6.0/ruby/ruby.h:413:29: note: expanded from macro 'ID2SYM'
#define ID2SYM(x) RB_ID2SYM(x)
                            ^
/Users/falcon/.rbenv/versions/2.6.5/include/ruby-2.6.0/ruby/ruby.h:408:33: note: expanded from macro 'RB_ID2SYM'
#define RB_ID2SYM(x) (rb_id2sym(x))
                                ^
monitor.c:226:23: note: '{' token is here
        return ID2SYM(rb_intern("w"));
                      ^~~~~~~~~~~~~~
/Users/falcon/.rbenv/versions/2.6.5/include/ruby-2.6.0/ruby/ruby.h:1826:24: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/falcon/.rbenv/versions/2.6.5/include/ruby-2.6.0/ruby/ruby.h:1811:5: note: expanded from macro 'RUBY_CONST_ID_CACHE'
    {                                                   \
    ^
/Users/falcon/.rbenv/versions/2.6.5/include/ruby-2.6.0/ruby/ruby.h:413:29: note: expanded from macro 'ID2SYM'
#define ID2SYM(x) RB_ID2SYM(x)
                            ^
/Users/falcon/.rbenv/versions/2.6.5/include/ruby-2.6.0/ruby/ruby.h:408:33: note: expanded from macro 'RB_ID2SYM'
#define RB_ID2SYM(x) (rb_id2sym(x))
                                ^
monitor.c:226:23: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        return ID2SYM(rb_intern("w"));
                      ^~~~~~~~~~~~~~
/Users/falcon/.rbenv/versions/2.6.5/include/ruby-2.6.0/ruby/ruby.h:1826:24: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/falcon/.rbenv/versions/2.6.5/include/ruby-2.6.0/ruby/ruby.h:1816:5: note: expanded from macro 'RUBY_CONST_ID_CACHE'
    }
    ^
/Users/falcon/.rbenv/versions/2.6.5/include/ruby-2.6.0/ruby/ruby.h:413:29: note: expanded from macro 'ID2SYM'
#define ID2SYM(x) RB_ID2SYM(x)
                            ^
/Users/falcon/.rbenv/versions/2.6.5/include/ruby-2.6.0/ruby/ruby.h:408:33: note: expanded from macro 'RB_ID2SYM'
#define RB_ID2SYM(x) (rb_id2sym(x))
                                ^
monitor.c:226:23: note: ')' token is here
        return ID2SYM(rb_intern("w"));
                      ^~~~~~~~~~~~~~
/Users/falcon/.rbenv/versions/2.6.5/include/ruby-2.6.0/ruby/ruby.h:1826:56: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                                                       ^
/Users/falcon/.rbenv/versions/2.6.5/include/ruby-2.6.0/ruby/ruby.h:413:29: note: expanded from macro 'ID2SYM'
#define ID2SYM(x) RB_ID2SYM(x)
                            ^
/Users/falcon/.rbenv/versions/2.6.5/include/ruby-2.6.0/ruby/ruby.h:408:33: note: expanded from macro 'RB_ID2SYM'
#define RB_ID2SYM(x) (rb_id2sym(x))
                                ^
monitor.c:263:25: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    if (interests_id == rb_intern("r")) {
                        ^~~~~~~~~~~~~~
/Users/falcon/.rbenv/versions/2.6.5/include/ruby-2.6.0/ruby/ruby.h:1826:23: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                      ^
monitor.c:263:25: note: '{' token is here
    if (interests_id == rb_intern("r")) {
                        ^~~~~~~~~~~~~~
/Users/falcon/.rbenv/versions/2.6.5/include/ruby-2.6.0/ruby/ruby.h:1826:24: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/falcon/.rbenv/versions/2.6.5/include/ruby-2.6.0/ruby/ruby.h:1811:5: note: expanded from macro 'RUBY_CONST_ID_CACHE'
    {                                                   \
    ^
monitor.c:263:25: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    if (interests_id == rb_intern("r")) {
                        ^~~~~~~~~~~~~~
/Users/falcon/.rbenv/versions/2.6.5/include/ruby-2.6.0/ruby/ruby.h:1826:24: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/falcon/.rbenv/versions/2.6.5/include/ruby-2.6.0/ruby/ruby.h:1816:5: note: expanded from macro 'RUBY_CONST_ID_CACHE'
    }
    ^
monitor.c:263:25: note: ')' token is here
    if (interests_id == rb_intern("r")) {
                        ^~~~~~~~~~~~~~
/Users/falcon/.rbenv/versions/2.6.5/include/ruby-2.6.0/ruby/ruby.h:1826:56: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                                                       ^
monitor.c:265:32: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    } else if (interests_id == rb_intern("w")) {
                               ^~~~~~~~~~~~~~
/Users/falcon/.rbenv/versions/2.6.5/include/ruby-2.6.0/ruby/ruby.h:1826:23: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                      ^
monitor.c:265:32: note: '{' token is here
    } else if (interests_id == rb_intern("w")) {
                               ^~~~~~~~~~~~~~
/Users/falcon/.rbenv/versions/2.6.5/include/ruby-2.6.0/ruby/ruby.h:1826:24: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/falcon/.rbenv/versions/2.6.5/include/ruby-2.6.0/ruby/ruby.h:1811:5: note: expanded from macro 'RUBY_CONST_ID_CACHE'
    {                                                   \
    ^
monitor.c:265:32: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    } else if (interests_id == rb_intern("w")) {
                               ^~~~~~~~~~~~~~
/Users/falcon/.rbenv/versions/2.6.5/include/ruby-2.6.0/ruby/ruby.h:1826:24: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/falcon/.rbenv/versions/2.6.5/include/ruby-2.6.0/ruby/ruby.h:1816:5: note: expanded from macro 'RUBY_CONST_ID_CACHE'
    }
    ^
monitor.c:265:32: note: ')' token is here
    } else if (interests_id == rb_intern("w")) {
                               ^~~~~~~~~~~~~~
/Users/falcon/.rbenv/versions/2.6.5/include/ruby-2.6.0/ruby/ruby.h:1826:56: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                                                       ^
monitor.c:267:32: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    } else if (interests_id == rb_intern("rw")) {
                               ^~~~~~~~~~~~~~~
/Users/falcon/.rbenv/versions/2.6.5/include/ruby-2.6.0/ruby/ruby.h:1826:23: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                      ^
monitor.c:267:32: note: '{' token is here
    } else if (interests_id == rb_intern("rw")) {
                               ^~~~~~~~~~~~~~~
/Users/falcon/.rbenv/versions/2.6.5/include/ruby-2.6.0/ruby/ruby.h:1826:24: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/falcon/.rbenv/versions/2.6.5/include/ruby-2.6.0/ruby/ruby.h:1811:5: note: expanded from macro 'RUBY_CONST_ID_CACHE'
    {                                                   \
    ^
monitor.c:267:32: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    } else if (interests_id == rb_intern("rw")) {
                               ^~~~~~~~~~~~~~~
/Users/falcon/.rbenv/versions/2.6.5/include/ruby-2.6.0/ruby/ruby.h:1826:24: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/falcon/.rbenv/versions/2.6.5/include/ruby-2.6.0/ruby/ruby.h:1816:5: note: expanded from macro 'RUBY_CONST_ID_CACHE'
    }
    ^
monitor.c:267:32: note: ')' token is here
    } else if (interests_id == rb_intern("rw")) {
                               ^~~~~~~~~~~~~~~
/Users/falcon/.rbenv/versions/2.6.5/include/ruby-2.6.0/ruby/ruby.h:1826:56: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                                                       ^
monitor.c:270:119: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        rb_raise(rb_eArgError, "invalid interest type %s (must be :r, :w, or :rw)", RSTRING_PTR(rb_funcall(interests, rb_intern("inspect"), 0)));
                                                                                                                      ^~~~~~~~~~~~~~~~~~~~
/Users/falcon/.rbenv/versions/2.6.5/include/ruby-2.6.0/ruby/ruby.h:1826:23: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                      ^
/Users/falcon/.rbenv/versions/2.6.5/include/ruby-2.6.0/ruby/ruby.h:2602:20: note: expanded from macro 'rb_funcall'
        rb_funcallv(recv, mid, \
                          ^~~
/Users/falcon/.rbenv/versions/2.6.5/include/ruby-2.6.0/ruby/ruby.h:1003:15: note: expanded from macro 'RSTRING_PTR'
    (!(RBASIC(str)->flags & RSTRING_NOEMBED) ? \
              ^~~
/Users/falcon/.rbenv/versions/2.6.5/include/ruby-2.6.0/ruby/ruby.h:1253:38: note: expanded from macro 'RBASIC'
#define RBASIC(obj)  (R_CAST(RBasic)(obj))
                                     ^~~
monitor.c:270:119: note: '{' token is here
        rb_raise(rb_eArgError, "invalid interest type %s (must be :r, :w, or :rw)", RSTRING_PTR(rb_funcall(interests, rb_intern("inspect"), 0)));
                                                                                                                      ^~~~~~~~~~~~~~~~~~~~
/Users/falcon/.rbenv/versions/2.6.5/include/ruby-2.6.0/ruby/ruby.h:1826:24: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/falcon/.rbenv/versions/2.6.5/include/ruby-2.6.0/ruby/ruby.h:1811:5: note: expanded from macro 'RUBY_CONST_ID_CACHE'
    {                                                   \
    ^
/Users/falcon/.rbenv/versions/2.6.5/include/ruby-2.6.0/ruby/ruby.h:2602:20: note: expanded from macro 'rb_funcall'
        rb_funcallv(recv, mid, \
                          ^~~
/Users/falcon/.rbenv/versions/2.6.5/include/ruby-2.6.0/ruby/ruby.h:1003:15: note: expanded from macro 'RSTRING_PTR'
    (!(RBASIC(str)->flags & RSTRING_NOEMBED) ? \
              ^~~
/Users/falcon/.rbenv/versions/2.6.5/include/ruby-2.6.0/ruby/ruby.h:1253:38: note: expanded from macro 'RBASIC'
#define RBASIC(obj)  (R_CAST(RBasic)(obj))
                                     ^~~
monitor.c:270:119: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        rb_raise(rb_eArgError, "invalid interest type %s (must be :r, :w, or :rw)", RSTRING_PTR(rb_funcall(interests, rb_intern("inspect"), 0)));
                                                                                                                      ^~~~~~~~~~~~~~~~~~~~
/Users/falcon/.rbenv/versions/2.6.5/include/ruby-2.6.0/ruby/ruby.h:1826:24: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/falcon/.rbenv/versions/2.6.5/include/ruby-2.6.0/ruby/ruby.h:1816:5: note: expanded from macro 'RUBY_CONST_ID_CACHE'
    }
    ^
/Users/falcon/.rbenv/versions/2.6.5/include/ruby-2.6.0/ruby/ruby.h:2602:20: note: expanded from macro 'rb_funcall'
        rb_funcallv(recv, mid, \
                          ^~~
/Users/falcon/.rbenv/versions/2.6.5/include/ruby-2.6.0/ruby/ruby.h:1003:15: note: expanded from macro 'RSTRING_PTR'
    (!(RBASIC(str)->flags & RSTRING_NOEMBED) ? \
              ^~~
/Users/falcon/.rbenv/versions/2.6.5/include/ruby-2.6.0/ruby/ruby.h:1253:38: note: expanded from macro 'RBASIC'
#define RBASIC(obj)  (R_CAST(RBasic)(obj))
                                     ^~~
monitor.c:270:119: note: ')' token is here
        rb_raise(rb_eArgError, "invalid interest type %s (must be :r, :w, or :rw)", RSTRING_PTR(rb_funcall(interests, rb_intern("inspect"), 0)));
                                                                                                                      ^~~~~~~~~~~~~~~~~~~~
/Users/falcon/.rbenv/versions/2.6.5/include/ruby-2.6.0/ruby/ruby.h:1826:56: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                                                       ^
/Users/falcon/.rbenv/versions/2.6.5/include/ruby-2.6.0/ruby/ruby.h:2602:20: note: expanded from macro 'rb_funcall'
        rb_funcallv(recv, mid, \
                          ^~~
/Users/falcon/.rbenv/versions/2.6.5/include/ruby-2.6.0/ruby/ruby.h:1003:15: note: expanded from macro 'RSTRING_PTR'
    (!(RBASIC(str)->flags & RSTRING_NOEMBED) ? \
              ^~~
/Users/falcon/.rbenv/versions/2.6.5/include/ruby-2.6.0/ruby/ruby.h:1253:38: note: expanded from macro 'RBASIC'
#define RBASIC(obj)  (R_CAST(RBasic)(obj))
                                     ^~~
monitor.c:270:119: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        rb_raise(rb_eArgError, "invalid interest type %s (must be :r, :w, or :rw)", RSTRING_PTR(rb_funcall(interests, rb_intern("inspect"), 0)));
                                                                                                                      ^~~~~~~~~~~~~~~~~~~~
/Users/falcon/.rbenv/versions/2.6.5/include/ruby-2.6.0/ruby/ruby.h:1826:23: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                      ^
/Users/falcon/.rbenv/versions/2.6.5/include/ruby-2.6.0/ruby/ruby.h:2602:20: note: expanded from macro 'rb_funcall'
        rb_funcallv(recv, mid, \
                          ^~~
/Users/falcon/.rbenv/versions/2.6.5/include/ruby-2.6.0/ruby/ruby.h:1004:14: note: expanded from macro 'RSTRING_PTR'
     RSTRING(str)->as.ary : \
             ^~~
/Users/falcon/.rbenv/versions/2.6.5/include/ruby-2.6.0/ruby/ruby.h:1257:39: note: expanded from macro 'RSTRING'
#define RSTRING(obj) (R_CAST(RString)(obj))
                                      ^~~
monitor.c:270:119: note: '{' token is here
        rb_raise(rb_eArgError, "invalid interest type %s (must be :r, :w, or :rw)", RSTRING_PTR(rb_funcall(interests, rb_intern("inspect"), 0)));
                                                                                                                      ^~~~~~~~~~~~~~~~~~~~
/Users/falcon/.rbenv/versions/2.6.5/include/ruby-2.6.0/ruby/ruby.h:1826:24: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/falcon/.rbenv/versions/2.6.5/include/ruby-2.6.0/ruby/ruby.h:1811:5: note: expanded from macro 'RUBY_CONST_ID_CACHE'
    {                                                   \
    ^
/Users/falcon/.rbenv/versions/2.6.5/include/ruby-2.6.0/ruby/ruby.h:2602:20: note: expanded from macro 'rb_funcall'
        rb_funcallv(recv, mid, \
                          ^~~
/Users/falcon/.rbenv/versions/2.6.5/include/ruby-2.6.0/ruby/ruby.h:1004:14: note: expanded from macro 'RSTRING_PTR'
     RSTRING(str)->as.ary : \
             ^~~
/Users/falcon/.rbenv/versions/2.6.5/include/ruby-2.6.0/ruby/ruby.h:1257:39: note: expanded from macro 'RSTRING'
#define RSTRING(obj) (R_CAST(RString)(obj))
                                      ^~~
monitor.c:270:119: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        rb_raise(rb_eArgError, "invalid interest type %s (must be :r, :w, or :rw)", RSTRING_PTR(rb_funcall(interests, rb_intern("inspect"), 0)));
                                                                                                                      ^~~~~~~~~~~~~~~~~~~~
/Users/falcon/.rbenv/versions/2.6.5/include/ruby-2.6.0/ruby/ruby.h:1826:24: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/falcon/.rbenv/versions/2.6.5/include/ruby-2.6.0/ruby/ruby.h:1816:5: note: expanded from macro 'RUBY_CONST_ID_CACHE'
    }
    ^
/Users/falcon/.rbenv/versions/2.6.5/include/ruby-2.6.0/ruby/ruby.h:2602:20: note: expanded from macro 'rb_funcall'
        rb_funcallv(recv, mid, \
                          ^~~
/Users/falcon/.rbenv/versions/2.6.5/include/ruby-2.6.0/ruby/ruby.h:1004:14: note: expanded from macro 'RSTRING_PTR'
     RSTRING(str)->as.ary : \
             ^~~
/Users/falcon/.rbenv/versions/2.6.5/include/ruby-2.6.0/ruby/ruby.h:1257:39: note: expanded from macro 'RSTRING'
#define RSTRING(obj) (R_CAST(RString)(obj))
                                      ^~~
monitor.c:270:119: note: ')' token is here
        rb_raise(rb_eArgError, "invalid interest type %s (must be :r, :w, or :rw)", RSTRING_PTR(rb_funcall(interests, rb_intern("inspect"), 0)));
                                                                                                                      ^~~~~~~~~~~~~~~~~~~~
/Users/falcon/.rbenv/versions/2.6.5/include/ruby-2.6.0/ruby/ruby.h:1826:56: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                                                       ^
/Users/falcon/.rbenv/versions/2.6.5/include/ruby-2.6.0/ruby/ruby.h:2602:20: note: expanded from macro 'rb_funcall'
        rb_funcallv(recv, mid, \
                          ^~~
/Users/falcon/.rbenv/versions/2.6.5/include/ruby-2.6.0/ruby/ruby.h:1004:14: note: expanded from macro 'RSTRING_PTR'
     RSTRING(str)->as.ary : \
             ^~~
/Users/falcon/.rbenv/versions/2.6.5/include/ruby-2.6.0/ruby/ruby.h:1257:39: note: expanded from macro 'RSTRING'
#define RSTRING(obj) (R_CAST(RString)(obj))
                                      ^~~
monitor.c:270:119: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        rb_raise(rb_eArgError, "invalid interest type %s (must be :r, :w, or :rw)", RSTRING_PTR(rb_funcall(interests, rb_intern("inspect"), 0)));
                                                                                                                      ^~~~~~~~~~~~~~~~~~~~
/Users/falcon/.rbenv/versions/2.6.5/include/ruby-2.6.0/ruby/ruby.h:1826:23: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                      ^
/Users/falcon/.rbenv/versions/2.6.5/include/ruby-2.6.0/ruby/ruby.h:2602:20: note: expanded from macro 'rb_funcall'
        rb_funcallv(recv, mid, \
                          ^~~
/Users/falcon/.rbenv/versions/2.6.5/include/ruby-2.6.0/ruby/ruby.h:1005:14: note: expanded from macro 'RSTRING_PTR'
     RSTRING(str)->as.heap.ptr)
             ^~~
/Users/falcon/.rbenv/versions/2.6.5/include/ruby-2.6.0/ruby/ruby.h:1257:39: note: expanded from macro 'RSTRING'
#define RSTRING(obj) (R_CAST(RString)(obj))
                                      ^~~
monitor.c:270:119: note: '{' token is here
        rb_raise(rb_eArgError, "invalid interest type %s (must be :r, :w, or :rw)", RSTRING_PTR(rb_funcall(interests, rb_intern("inspect"), 0)));
                                                                                                                      ^~~~~~~~~~~~~~~~~~~~
/Users/falcon/.rbenv/versions/2.6.5/include/ruby-2.6.0/ruby/ruby.h:1826:24: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/falcon/.rbenv/versions/2.6.5/include/ruby-2.6.0/ruby/ruby.h:1811:5: note: expanded from macro 'RUBY_CONST_ID_CACHE'
    {                                                   \
    ^
/Users/falcon/.rbenv/versions/2.6.5/include/ruby-2.6.0/ruby/ruby.h:2602:20: note: expanded from macro 'rb_funcall'
        rb_funcallv(recv, mid, \
                          ^~~
/Users/falcon/.rbenv/versions/2.6.5/include/ruby-2.6.0/ruby/ruby.h:1005:14: note: expanded from macro 'RSTRING_PTR'
     RSTRING(str)->as.heap.ptr)
             ^~~
/Users/falcon/.rbenv/versions/2.6.5/include/ruby-2.6.0/ruby/ruby.h:1257:39: note: expanded from macro 'RSTRING'
#define RSTRING(obj) (R_CAST(RString)(obj))
                                      ^~~
monitor.c:270:119: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        rb_raise(rb_eArgError, "invalid interest type %s (must be :r, :w, or :rw)", RSTRING_PTR(rb_funcall(interests, rb_intern("inspect"), 0)));
                                                                                                                      ^~~~~~~~~~~~~~~~~~~~
/Users/falcon/.rbenv/versions/2.6.5/include/ruby-2.6.0/ruby/ruby.h:1826:24: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/falcon/.rbenv/versions/2.6.5/include/ruby-2.6.0/ruby/ruby.h:1816:5: note: expanded from macro 'RUBY_CONST_ID_CACHE'
    }
    ^
/Users/falcon/.rbenv/versions/2.6.5/include/ruby-2.6.0/ruby/ruby.h:2602:20: note: expanded from macro 'rb_funcall'
        rb_funcallv(recv, mid, \
                          ^~~
/Users/falcon/.rbenv/versions/2.6.5/include/ruby-2.6.0/ruby/ruby.h:1005:14: note: expanded from macro 'RSTRING_PTR'
     RSTRING(str)->as.heap.ptr)
             ^~~
/Users/falcon/.rbenv/versions/2.6.5/include/ruby-2.6.0/ruby/ruby.h:1257:39: note: expanded from macro 'RSTRING'
#define RSTRING(obj) (R_CAST(RString)(obj))
                                      ^~~
monitor.c:270:119: note: ')' token is here
        rb_raise(rb_eArgError, "invalid interest type %s (must be :r, :w, or :rw)", RSTRING_PTR(rb_funcall(interests, rb_intern("inspect"), 0)));
                                                                                                                      ^~~~~~~~~~~~~~~~~~~~
/Users/falcon/.rbenv/versions/2.6.5/include/ruby-2.6.0/ruby/ruby.h:1826:56: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                                                       ^
/Users/falcon/.rbenv/versions/2.6.5/include/ruby-2.6.0/ruby/ruby.h:2602:20: note: expanded from macro 'rb_funcall'
        rb_funcallv(recv, mid, \
                          ^~~
/Users/falcon/.rbenv/versions/2.6.5/include/ruby-2.6.0/ruby/ruby.h:1005:14: note: expanded from macro 'RSTRING_PTR'
     RSTRING(str)->as.heap.ptr)
             ^~~
/Users/falcon/.rbenv/versions/2.6.5/include/ruby-2.6.0/ruby/ruby.h:1257:39: note: expanded from macro 'RSTRING'
#define RSTRING(obj) (R_CAST(RString)(obj))
                                      ^~~
monitor.c:287:32: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
                interests_id = rb_intern("r");
                               ^~~~~~~~~~~~~~
/Users/falcon/.rbenv/versions/2.6.5/include/ruby-2.6.0/ruby/ruby.h:1826:23: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                      ^
monitor.c:287:32: note: '{' token is here
                interests_id = rb_intern("r");
                               ^~~~~~~~~~~~~~
/Users/falcon/.rbenv/versions/2.6.5/include/ruby-2.6.0/ruby/ruby.h:1826:24: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/falcon/.rbenv/versions/2.6.5/include/ruby-2.6.0/ruby/ruby.h:1811:5: note: expanded from macro 'RUBY_CONST_ID_CACHE'
    {                                                   \
    ^
monitor.c:287:32: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
                interests_id = rb_intern("r");
                               ^~~~~~~~~~~~~~
/Users/falcon/.rbenv/versions/2.6.5/include/ruby-2.6.0/ruby/ruby.h:1826:24: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/falcon/.rbenv/versions/2.6.5/include/ruby-2.6.0/ruby/ruby.h:1816:5: note: expanded from macro 'RUBY_CONST_ID_CACHE'
    }
    ^
monitor.c:287:32: note: ')' token is here
                interests_id = rb_intern("r");
                               ^~~~~~~~~~~~~~
/Users/falcon/.rbenv/versions/2.6.5/include/ruby-2.6.0/ruby/ruby.h:1826:56: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                                                       ^
monitor.c:290:32: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
                interests_id = rb_intern("w");
                               ^~~~~~~~~~~~~~
/Users/falcon/.rbenv/versions/2.6.5/include/ruby-2.6.0/ruby/ruby.h:1826:23: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                      ^
monitor.c:290:32: note: '{' token is here
                interests_id = rb_intern("w");
                               ^~~~~~~~~~~~~~
/Users/falcon/.rbenv/versions/2.6.5/include/ruby-2.6.0/ruby/ruby.h:1826:24: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/falcon/.rbenv/versions/2.6.5/include/ruby-2.6.0/ruby/ruby.h:1811:5: note: expanded from macro 'RUBY_CONST_ID_CACHE'
    {                                                   \
    ^
monitor.c:290:32: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
                interests_id = rb_intern("w");
                               ^~~~~~~~~~~~~~
/Users/falcon/.rbenv/versions/2.6.5/include/ruby-2.6.0/ruby/ruby.h:1826:24: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/falcon/.rbenv/versions/2.6.5/include/ruby-2.6.0/ruby/ruby.h:1816:5: note: expanded from macro 'RUBY_CONST_ID_CACHE'
    }
    ^
monitor.c:290:32: note: ')' token is here
                interests_id = rb_intern("w");
                               ^~~~~~~~~~~~~~
/Users/falcon/.rbenv/versions/2.6.5/include/ruby-2.6.0/ruby/ruby.h:1826:56: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                                                       ^
monitor.c:293:32: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
                interests_id = rb_intern("rw");
                               ^~~~~~~~~~~~~~~
/Users/falcon/.rbenv/versions/2.6.5/include/ruby-2.6.0/ruby/ruby.h:1826:23: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                      ^
monitor.c:293:32: note: '{' token is here
                interests_id = rb_intern("rw");
                               ^~~~~~~~~~~~~~~
/Users/falcon/.rbenv/versions/2.6.5/include/ruby-2.6.0/ruby/ruby.h:1826:24: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/falcon/.rbenv/versions/2.6.5/include/ruby-2.6.0/ruby/ruby.h:1811:5: note: expanded from macro 'RUBY_CONST_ID_CACHE'
    {                                                   \
    ^
monitor.c:293:32: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
                interests_id = rb_intern("rw");
                               ^~~~~~~~~~~~~~~
/Users/falcon/.rbenv/versions/2.6.5/include/ruby-2.6.0/ruby/ruby.h:1826:24: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/falcon/.rbenv/versions/2.6.5/include/ruby-2.6.0/ruby/ruby.h:1816:5: note: expanded from macro 'RUBY_CONST_ID_CACHE'
    }
    ^
monitor.c:293:32: note: ')' token is here
                interests_id = rb_intern("rw");
                               ^~~~~~~~~~~~~~~
/Users/falcon/.rbenv/versions/2.6.5/include/ruby-2.6.0/ruby/ruby.h:1826:56: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                                                       ^
monitor.c:299:27: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        rb_ivar_set(self, rb_intern("interests"), ID2SYM(interests_id));
                          ^~~~~~~~~~~~~~~~~~~~~~
/Users/falcon/.rbenv/versions/2.6.5/include/ruby-2.6.0/ruby/ruby.h:1826:23: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                      ^
monitor.c:299:27: note: '{' token is here
        rb_ivar_set(self, rb_intern("interests"), ID2SYM(interests_id));
                          ^~~~~~~~~~~~~~~~~~~~~~
/Users/falcon/.rbenv/versions/2.6.5/include/ruby-2.6.0/ruby/ruby.h:1826:24: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/falcon/.rbenv/versions/2.6.5/include/ruby-2.6.0/ruby/ruby.h:1811:5: note: expanded from macro 'RUBY_CONST_ID_CACHE'
    {                                                   \
    ^
monitor.c:299:27: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        rb_ivar_set(self, rb_intern("interests"), ID2SYM(interests_id));
                          ^~~~~~~~~~~~~~~~~~~~~~
/Users/falcon/.rbenv/versions/2.6.5/include/ruby-2.6.0/ruby/ruby.h:1826:24: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/falcon/.rbenv/versions/2.6.5/include/ruby-2.6.0/ruby/ruby.h:1816:5: note: expanded from macro 'RUBY_CONST_ID_CACHE'
    }
    ^
monitor.c:299:27: note: ')' token is here
        rb_ivar_set(self, rb_intern("interests"), ID2SYM(interests_id));
                          ^~~~~~~~~~~~~~~~~~~~~~
/Users/falcon/.rbenv/versions/2.6.5/include/ruby-2.6.0/ruby/ruby.h:1826:56: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                                                       ^
monitor.c:301:27: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        rb_ivar_set(self, rb_intern("interests"), Qnil);
                          ^~~~~~~~~~~~~~~~~~~~~~
/Users/falcon/.rbenv/versions/2.6.5/include/ruby-2.6.0/ruby/ruby.h:1826:23: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                      ^
monitor.c:301:27: note: '{' token is here
        rb_ivar_set(self, rb_intern("interests"), Qnil);
                          ^~~~~~~~~~~~~~~~~~~~~~
/Users/falcon/.rbenv/versions/2.6.5/include/ruby-2.6.0/ruby/ruby.h:1826:24: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/falcon/.rbenv/versions/2.6.5/include/ruby-2.6.0/ruby/ruby.h:1811:5: note: expanded from macro 'RUBY_CONST_ID_CACHE'
    {                                                   \
    ^
monitor.c:301:27: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        rb_ivar_set(self, rb_intern("interests"), Qnil);
                          ^~~~~~~~~~~~~~~~~~~~~~
/Users/falcon/.rbenv/versions/2.6.5/include/ruby-2.6.0/ruby/ruby.h:1826:24: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/falcon/.rbenv/versions/2.6.5/include/ruby-2.6.0/ruby/ruby.h:1816:5: note: expanded from macro 'RUBY_CONST_ID_CACHE'
    }
    ^
monitor.c:301:27: note: ')' token is here
        rb_ivar_set(self, rb_intern("interests"), Qnil);
                          ^~~~~~~~~~~~~~~~~~~~~~
/Users/falcon/.rbenv/versions/2.6.5/include/ruby-2.6.0/ruby/ruby.h:1826:56: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                                                       ^
72 warnings generated.
compiling nio4r_ext.c
In file included from nio4r_ext.c:6:
./../libev/ev.c:511:48: warning: '/*' within block comment [-Wcomment]
/*#define MIN_INTERVAL  0.00000095367431640625 /* 1/2**20, good till 2200 */
                                               ^
./../libev/ev.c:1096:26: warning: implicit conversion loses integer precision: 'uint64_t' (aka 'unsigned long long') to 'unsigned int' [-Wshorten-64-to-32]
  return ecb_popcount32 (x) + ecb_popcount32 (x >> 32);
         ~~~~~~~~~~~~~~~~^~
./../libev/ev.c:958:49: note: expanded from macro 'ecb_popcount32'
  #define ecb_popcount32(x) __builtin_popcount (x)
                            ~~~~~~~~~~~~~~~~~~  ^
./../libev/ev.c:1302:13: warning: comparison of integers of different signs: 'unsigned int' and 'int' [-Wsign-compare]
      if (e < (14 - 24)) /* might not be sharp, but is good enough */
          ~ ^  ~~~~~~~
./../libev/ev.c:1867:31: warning: 'extern' variable has an initializer [-Wextern-initializer]
  EV_API_DECL struct ev_loop *ev_default_loop_ptr = 0; /* needs to be initialised to make it a definition despite extern */
                              ^
./../libev/ev.c:1956:7: warning: implicit conversion loses integer precision: 'long' to '__darwin_suseconds_t' (aka 'int') [-Wshorten-64-to-32]
      EV_TV_SET (tv, delay);
      ^~~~~~~~~~~~~~~~~~~~~
./../libev/ev.c:516:64: note: expanded from macro 'EV_TV_SET'
#define EV_TV_SET(tv,t) do { tv.tv_sec = (long)t; tv.tv_usec = (long)((t - tv.tv_sec) * 1e6); } while (0)
                                                             ~ ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./../libev/ev.c:1978:19: warning: comparison of integers of different signs: 'int' and 'unsigned long' [-Wsign-compare]
  if (elem * ncur > MALLOC_ROUND - sizeof (void *) * 4)
      ~~~~~~~~~~~ ^ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./../libev/ev.c:2329:18: warning: implicit conversion loses integer precision: 'long' to 'int' [-Wshorten-64-to-32]
      k = minpos - heap;
        ~ ~~~~~~~^~~~~~
In file included from nio4r_ext.c:6:
In file included from ./../libev/ev.c:2739:
./../libev/ev_kqueue.c:116:34: warning: implicit conversion loses integer precision: 'uintptr_t' (aka 'unsigned long') to 'int' [-Wshorten-64-to-32]
      int fd = kqueue_events [i].ident;
          ~~   ~~~~~~~~~~~~~~~~~~^~~~~
./../libev/ev_kqueue.c:120:39: warning: implicit conversion loses integer precision: 'intptr_t' (aka 'long') to 'int' [-Wshorten-64-to-32]
          int err = kqueue_events [i].data;
              ~~~   ~~~~~~~~~~~~~~~~~~^~~~
In file included from nio4r_ext.c:6:
In file included from ./../libev/ev.c:2751:
./../libev/ev_select.c:109:24: warning: implicit conversion loses integer precision: 'unsigned long' to 'fd_mask' (aka 'int') [-Wshorten-64-to-32]
    fd_mask mask = 1UL << (fd % NFDBITS);
            ~~~~   ~~~~^~~~~~~~~~~~~~~~~
./../libev/ev_select.c:147:3: warning: implicit conversion loses integer precision: 'long' to '__darwin_suseconds_t' (aka 'int') [-Wshorten-64-to-32]
  EV_TV_SET (tv, timeout);
  ^~~~~~~~~~~~~~~~~~~~~~~
./../libev/ev.c:516:64: note: expanded from macro 'EV_TV_SET'
#define EV_TV_SET(tv,t) do { tv.tv_sec = (long)t; tv.tv_usec = (long)((t - tv.tv_sec) * 1e6); } while (0)
                                                             ~ ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from nio4r_ext.c:6:
In file included from ./../libev/ev.c:2751:
./../libev/ev_select.c:259:34: warning: implicit conversion loses integer precision: 'unsigned long' to 'fd_mask' (aka 'int') [-Wshorten-64-to-32]
              fd_mask mask = 1UL << bit;
                      ~~~~   ~~~~^~~~~~
In file included from nio4r_ext.c:6:
./../libev/ev.c:4014:34: warning: '&' within '|' [-Wbitwise-op-parentheses]
  fd_change (EV_A_ fd, w->events & EV__IOFDSET | EV_ANFD_REIFY);
                       ~~~~~~~~~~^~~~~~~~~~~~~ ~
./../libev/ev.c:4014:34: note: place parentheses around the '&' expression to silence this warning
  fd_change (EV_A_ fd, w->events & EV__IOFDSET | EV_ANFD_REIFY);
                                 ^
                       (                      )
13 warnings generated.
compiling selector.c
selector.c:167:36: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        rb_ary_push(result, ID2SYM(rb_intern("epoll")));
                                   ^~~~~~~~~~~~~~~~~~
/Users/falcon/.rbenv/versions/2.6.5/include/ruby-2.6.0/ruby/ruby.h:1826:23: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                      ^
/Users/falcon/.rbenv/versions/2.6.5/include/ruby-2.6.0/ruby/ruby.h:413:29: note: expanded from macro 'ID2SYM'
#define ID2SYM(x) RB_ID2SYM(x)
                            ^
/Users/falcon/.rbenv/versions/2.6.5/include/ruby-2.6.0/ruby/ruby.h:408:33: note: expanded from macro 'RB_ID2SYM'
#define RB_ID2SYM(x) (rb_id2sym(x))
                                ^
selector.c:167:36: note: '{' token is here
        rb_ary_push(result, ID2SYM(rb_intern("epoll")));
                                   ^~~~~~~~~~~~~~~~~~
/Users/falcon/.rbenv/versions/2.6.5/include/ruby-2.6.0/ruby/ruby.h:1826:24: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/falcon/.rbenv/versions/2.6.5/include/ruby-2.6.0/ruby/ruby.h:1811:5: note: expanded from macro 'RUBY_CONST_ID_CACHE'
    {                                                   \
    ^
/Users/falcon/.rbenv/versions/2.6.5/include/ruby-2.6.0/ruby/ruby.h:413:29: note: expanded from macro 'ID2SYM'
#define ID2SYM(x) RB_ID2SYM(x)
                            ^
/Users/falcon/.rbenv/versions/2.6.5/include/ruby-2.6.0/ruby/ruby.h:408:33: note: expanded from macro 'RB_ID2SYM'
#define RB_ID2SYM(x) (rb_id2sym(x))
                                ^
selector.c:167:36: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        rb_ary_push(result, ID2SYM(rb_intern("epoll")));
                                   ^~~~~~~~~~~~~~~~~~
/Users/falcon/.rbenv/versions/2.6.5/include/ruby-2.6.0/ruby/ruby.h:1826:24: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/falcon/.rbenv/versions/2.6.5/include/ruby-2.6.0/ruby/ruby.h:1816:5: note: expanded from macro 'RUBY_CONST_ID_CACHE'
    }
    ^
/Users/falcon/.rbenv/versions/2.6.5/include/ruby-2.6.0/ruby/ruby.h:413:29: note: expanded from macro 'ID2SYM'
#define ID2SYM(x) RB_ID2SYM(x)
                            ^
/Users/falcon/.rbenv/versions/2.6.5/include/ruby-2.6.0/ruby/ruby.h:408:33: note: expanded from macro 'RB_ID2SYM'
#define RB_ID2SYM(x) (rb_id2sym(x))
                                ^
selector.c:167:36: note: ')' token is here
        rb_ary_push(result, ID2SYM(rb_intern("epoll")));
                                   ^~~~~~~~~~~~~~~~~~
/Users/falcon/.rbenv/versions/2.6.5/include/ruby-2.6.0/ruby/ruby.h:1826:56: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                                                       ^
/Users/falcon/.rbenv/versions/2.6.5/include/ruby-2.6.0/ruby/ruby.h:413:29: note: expanded from macro 'ID2SYM'
#define ID2SYM(x) RB_ID2SYM(x)
                            ^
/Users/falcon/.rbenv/versions/2.6.5/include/ruby-2.6.0/ruby/ruby.h:408:33: note: expanded from macro 'RB_ID2SYM'
#define RB_ID2SYM(x) (rb_id2sym(x))
                                ^
selector.c:171:36: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        rb_ary_push(result, ID2SYM(rb_intern("poll")));
                                   ^~~~~~~~~~~~~~~~~
/Users/falcon/.rbenv/versions/2.6.5/include/ruby-2.6.0/ruby/ruby.h:1826:23: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                      ^
/Users/falcon/.rbenv/versions/2.6.5/include/ruby-2.6.0/ruby/ruby.h:413:29: note: expanded from macro 'ID2SYM'
#define ID2SYM(x) RB_ID2SYM(x)
                            ^
/Users/falcon/.rbenv/versions/2.6.5/include/ruby-2.6.0/ruby/ruby.h:408:33: note: expanded from macro 'RB_ID2SYM'
#define RB_ID2SYM(x) (rb_id2sym(x))
                                ^
selector.c:171:36: note: '{' token is here
        rb_ary_push(result, ID2SYM(rb_intern("poll")));
                                   ^~~~~~~~~~~~~~~~~
/Users/falcon/.rbenv/versions/2.6.5/include/ruby-2.6.0/ruby/ruby.h:1826:24: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/falcon/.rbenv/versions/2.6.5/include/ruby-2.6.0/ruby/ruby.h:1811:5: note: expanded from macro 'RUBY_CONST_ID_CACHE'
    {                                                   \
    ^
/Users/falcon/.rbenv/versions/2.6.5/include/ruby-2.6.0/ruby/ruby.h:413:29: note: expanded from macro 'ID2SYM'
#define ID2SYM(x) RB_ID2SYM(x)
                            ^
/Users/falcon/.rbenv/versions/2.6.5/include/ruby-2.6.0/ruby/ruby.h:408:33: note: expanded from macro 'RB_ID2SYM'
#define RB_ID2SYM(x) (rb_id2sym(x))
                                ^
selector.c:171:36: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        rb_ary_push(result, ID2SYM(rb_intern("poll")));
                                   ^~~~~~~~~~~~~~~~~
/Users/falcon/.rbenv/versions/2.6.5/include/ruby-2.6.0/ruby/ruby.h:1826:24: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/falcon/.rbenv/versions/2.6.5/include/ruby-2.6.0/ruby/ruby.h:1816:5: note: expanded from macro 'RUBY_CONST_ID_CACHE'
    }
    ^
/Users/falcon/.rbenv/versions/2.6.5/include/ruby-2.6.0/ruby/ruby.h:413:29: note: expanded from macro 'ID2SYM'
#define ID2SYM(x) RB_ID2SYM(x)
                            ^
/Users/falcon/.rbenv/versions/2.6.5/include/ruby-2.6.0/ruby/ruby.h:408:33: note: expanded from macro 'RB_ID2SYM'
#define RB_ID2SYM(x) (rb_id2sym(x))
                                ^
selector.c:171:36: note: ')' token is here
        rb_ary_push(result, ID2SYM(rb_intern("poll")));
                                   ^~~~~~~~~~~~~~~~~
/Users/falcon/.rbenv/versions/2.6.5/include/ruby-2.6.0/ruby/ruby.h:1826:56: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                                                       ^
/Users/falcon/.rbenv/versions/2.6.5/include/ruby-2.6.0/ruby/ruby.h:413:29: note: expanded from macro 'ID2SYM'
#define ID2SYM(x) RB_ID2SYM(x)
                            ^
/Users/falcon/.rbenv/versions/2.6.5/include/ruby-2.6.0/ruby/ruby.h:408:33: note: expanded from macro 'RB_ID2SYM'
#define RB_ID2SYM(x) (rb_id2sym(x))
                                ^
selector.c:175:36: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        rb_ary_push(result, ID2SYM(rb_intern("kqueue")));
                                   ^~~~~~~~~~~~~~~~~~~
/Users/falcon/.rbenv/versions/2.6.5/include/ruby-2.6.0/ruby/ruby.h:1826:23: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                      ^
/Users/falcon/.rbenv/versions/2.6.5/include/ruby-2.6.0/ruby/ruby.h:413:29: note: expanded from macro 'ID2SYM'
#define ID2SYM(x) RB_ID2SYM(x)
                            ^
/Users/falcon/.rbenv/versions/2.6.5/include/ruby-2.6.0/ruby/ruby.h:408:33: note: expanded from macro 'RB_ID2SYM'
#define RB_ID2SYM(x) (rb_id2sym(x))
                                ^
selector.c:175:36: note: '{' token is here
        rb_ary_push(result, ID2SYM(rb_intern("kqueue")));
                                   ^~~~~~~~~~~~~~~~~~~
/Users/falcon/.rbenv/versions/2.6.5/include/ruby-2.6.0/ruby/ruby.h:1826:24: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/falcon/.rbenv/versions/2.6.5/include/ruby-2.6.0/ruby/ruby.h:1811:5: note: expanded from macro 'RUBY_CONST_ID_CACHE'
    {                                                   \
    ^
/Users/falcon/.rbenv/versions/2.6.5/include/ruby-2.6.0/ruby/ruby.h:413:29: note: expanded from macro 'ID2SYM'
#define ID2SYM(x) RB_ID2SYM(x)
                            ^
/Users/falcon/.rbenv/versions/2.6.5/include/ruby-2.6.0/ruby/ruby.h:408:33: note: expanded from macro 'RB_ID2SYM'
#define RB_ID2SYM(x) (rb_id2sym(x))
                                ^
selector.c:175:36: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        rb_ary_push(result, ID2SYM(rb_intern("kqueue")));
                                   ^~~~~~~~~~~~~~~~~~~
/Users/falcon/.rbenv/versions/2.6.5/include/ruby-2.6.0/ruby/ruby.h:1826:24: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/falcon/.rbenv/versions/2.6.5/include/ruby-2.6.0/ruby/ruby.h:1816:5: note: expanded from macro 'RUBY_CONST_ID_CACHE'
    }
    ^
/Users/falcon/.rbenv/versions/2.6.5/include/ruby-2.6.0/ruby/ruby.h:413:29: note: expanded from macro 'ID2SYM'
#define ID2SYM(x) RB_ID2SYM(x)
                            ^
/Users/falcon/.rbenv/versions/2.6.5/include/ruby-2.6.0/ruby/ruby.h:408:33: note: expanded from macro 'RB_ID2SYM'
#define RB_ID2SYM(x) (rb_id2sym(x))
                                ^
selector.c:175:36: note: ')' token is here
        rb_ary_push(result, ID2SYM(rb_intern("kqueue")));
                                   ^~~~~~~~~~~~~~~~~~~
/Users/falcon/.rbenv/versions/2.6.5/include/ruby-2.6.0/ruby/ruby.h:1826:56: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                                                       ^
/Users/falcon/.rbenv/versions/2.6.5/include/ruby-2.6.0/ruby/ruby.h:413:29: note: expanded from macro 'ID2SYM'
#define ID2SYM(x) RB_ID2SYM(x)
                            ^
/Users/falcon/.rbenv/versions/2.6.5/include/ruby-2.6.0/ruby/ruby.h:408:33: note: expanded from macro 'RB_ID2SYM'
#define RB_ID2SYM(x) (rb_id2sym(x))
                                ^
selector.c:179:36: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        rb_ary_push(result, ID2SYM(rb_intern("select")));
                                   ^~~~~~~~~~~~~~~~~~~
/Users/falcon/.rbenv/versions/2.6.5/include/ruby-2.6.0/ruby/ruby.h:1826:23: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                      ^
/Users/falcon/.rbenv/versions/2.6.5/include/ruby-2.6.0/ruby/ruby.h:413:29: note: expanded from macro 'ID2SYM'
#define ID2SYM(x) RB_ID2SYM(x)
                            ^
/Users/falcon/.rbenv/versions/2.6.5/include/ruby-2.6.0/ruby/ruby.h:408:33: note: expanded from macro 'RB_ID2SYM'
#define RB_ID2SYM(x) (rb_id2sym(x))
                                ^
selector.c:179:36: note: '{' token is here
        rb_ary_push(result, ID2SYM(rb_intern("select")));
                                   ^~~~~~~~~~~~~~~~~~~
/Users/falcon/.rbenv/versions/2.6.5/include/ruby-2.6.0/ruby/ruby.h:1826:24: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/falcon/.rbenv/versions/2.6.5/include/ruby-2.6.0/ruby/ruby.h:1811:5: note: expanded from macro 'RUBY_CONST_ID_CACHE'
    {                                                   \
    ^
/Users/falcon/.rbenv/versions/2.6.5/include/ruby-2.6.0/ruby/ruby.h:413:29: note: expanded from macro 'ID2SYM'
#define ID2SYM(x) RB_ID2SYM(x)
                            ^
/Users/falcon/.rbenv/versions/2.6.5/include/ruby-2.6.0/ruby/ruby.h:408:33: note: expanded from macro 'RB_ID2SYM'
#define RB_ID2SYM(x) (rb_id2sym(x))
                                ^
selector.c:179:36: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        rb_ary_push(result, ID2SYM(rb_intern("select")));
                                   ^~~~~~~~~~~~~~~~~~~
/Users/falcon/.rbenv/versions/2.6.5/include/ruby-2.6.0/ruby/ruby.h:1826:24: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/falcon/.rbenv/versions/2.6.5/include/ruby-2.6.0/ruby/ruby.h:1816:5: note: expanded from macro 'RUBY_CONST_ID_CACHE'
    }
    ^
/Users/falcon/.rbenv/versions/2.6.5/include/ruby-2.6.0/ruby/ruby.h:413:29: note: expanded from macro 'ID2SYM'
#define ID2SYM(x) RB_ID2SYM(x)
                            ^
/Users/falcon/.rbenv/versions/2.6.5/include/ruby-2.6.0/ruby/ruby.h:408:33: note: expanded from macro 'RB_ID2SYM'
#define RB_ID2SYM(x) (rb_id2sym(x))
                                ^
selector.c:179:36: note: ')' token is here
        rb_ary_push(result, ID2SYM(rb_intern("select")));
                                   ^~~~~~~~~~~~~~~~~~~
/Users/falcon/.rbenv/versions/2.6.5/include/ruby-2.6.0/ruby/ruby.h:1826:56: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                                                       ^
/Users/falcon/.rbenv/versions/2.6.5/include/ruby-2.6.0/ruby/ruby.h:413:29: note: expanded from macro 'ID2SYM'
#define ID2SYM(x) RB_ID2SYM(x)
                            ^
/Users/falcon/.rbenv/versions/2.6.5/include/ruby-2.6.0/ruby/ruby.h:408:33: note: expanded from macro 'RB_ID2SYM'
#define RB_ID2SYM(x) (rb_id2sym(x))
                                ^
selector.c:183:36: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        rb_ary_push(result, ID2SYM(rb_intern("port")));
                                   ^~~~~~~~~~~~~~~~~
/Users/falcon/.rbenv/versions/2.6.5/include/ruby-2.6.0/ruby/ruby.h:1826:23: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                      ^
/Users/falcon/.rbenv/versions/2.6.5/include/ruby-2.6.0/ruby/ruby.h:413:29: note: expanded from macro 'ID2SYM'
#define ID2SYM(x) RB_ID2SYM(x)
                            ^
/Users/falcon/.rbenv/versions/2.6.5/include/ruby-2.6.0/ruby/ruby.h:408:33: note: expanded from macro 'RB_ID2SYM'
#define RB_ID2SYM(x) (rb_id2sym(x))
                                ^
selector.c:183:36: note: '{' token is here
        rb_ary_push(result, ID2SYM(rb_intern("port")));
                                   ^~~~~~~~~~~~~~~~~
/Users/falcon/.rbenv/versions/2.6.5/include/ruby-2.6.0/ruby/ruby.h:1826:24: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/falcon/.rbenv/versions/2.6.5/include/ruby-2.6.0/ruby/ruby.h:1811:5: note: expanded from macro 'RUBY_CONST_ID_CACHE'
    {                                                   \
    ^
/Users/falcon/.rbenv/versions/2.6.5/include/ruby-2.6.0/ruby/ruby.h:413:29: note: expanded from macro 'ID2SYM'
#define ID2SYM(x) RB_ID2SYM(x)
                            ^
/Users/falcon/.rbenv/versions/2.6.5/include/ruby-2.6.0/ruby/ruby.h:408:33: note: expanded from macro 'RB_ID2SYM'
#define RB_ID2SYM(x) (rb_id2sym(x))
                                ^
selector.c:183:36: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        rb_ary_push(result, ID2SYM(rb_intern("port")));
                                   ^~~~~~~~~~~~~~~~~
/Users/falcon/.rbenv/versions/2.6.5/include/ruby-2.6.0/ruby/ruby.h:1826:24: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/falcon/.rbenv/versions/2.6.5/include/ruby-2.6.0/ruby/ruby.h:1816:5: note: expanded from macro 'RUBY_CONST_ID_CACHE'
    }
    ^
/Users/falcon/.rbenv/versions/2.6.5/include/ruby-2.6.0/ruby/ruby.h:413:29: note: expanded from macro 'ID2SYM'
#define ID2SYM(x) RB_ID2SYM(x)
                            ^
/Users/falcon/.rbenv/versions/2.6.5/include/ruby-2.6.0/ruby/ruby.h:408:33: note: expanded from macro 'RB_ID2SYM'
#define RB_ID2SYM(x) (rb_id2sym(x))
                                ^
selector.c:183:36: note: ')' token is here
        rb_ary_push(result, ID2SYM(rb_intern("port")));
                                   ^~~~~~~~~~~~~~~~~
/Users/falcon/.rbenv/versions/2.6.5/include/ruby-2.6.0/ruby/ruby.h:1826:56: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                                                       ^
/Users/falcon/.rbenv/versions/2.6.5/include/ruby-2.6.0/ruby/ruby.h:413:29: note: expanded from macro 'ID2SYM'
#define ID2SYM(x) RB_ID2SYM(x)
                            ^
/Users/falcon/.rbenv/versions/2.6.5/include/ruby-2.6.0/ruby/ruby.h:408:33: note: expanded from macro 'RB_ID2SYM'
#define RB_ID2SYM(x) (rb_id2sym(x))
                                ^
selector.c:206:95: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
            rb_raise(rb_eArgError, "unsupported backend: %s", RSTRING_PTR(rb_funcall(backend, rb_intern("inspect"), 0)));
                                                                                              ^~~~~~~~~~~~~~~~~~~~
/Users/falcon/.rbenv/versions/2.6.5/include/ruby-2.6.0/ruby/ruby.h:1826:23: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                      ^
/Users/falcon/.rbenv/versions/2.6.5/include/ruby-2.6.0/ruby/ruby.h:2602:20: note: expanded from macro 'rb_funcall'
        rb_funcallv(recv, mid, \
                          ^~~
/Users/falcon/.rbenv/versions/2.6.5/include/ruby-2.6.0/ruby/ruby.h:1003:15: note: expanded from macro 'RSTRING_PTR'
    (!(RBASIC(str)->flags & RSTRING_NOEMBED) ? \
              ^~~
/Users/falcon/.rbenv/versions/2.6.5/include/ruby-2.6.0/ruby/ruby.h:1253:38: note: expanded from macro 'RBASIC'
#define RBASIC(obj)  (R_CAST(RBasic)(obj))
                                     ^~~
selector.c:206:95: note: '{' token is here
            rb_raise(rb_eArgError, "unsupported backend: %s", RSTRING_PTR(rb_funcall(backend, rb_intern("inspect"), 0)));
                                                                                              ^~~~~~~~~~~~~~~~~~~~
/Users/falcon/.rbenv/versions/2.6.5/include/ruby-2.6.0/ruby/ruby.h:1826:24: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/falcon/.rbenv/versions/2.6.5/include/ruby-2.6.0/ruby/ruby.h:1811:5: note: expanded from macro 'RUBY_CONST_ID_CACHE'
    {                                                   \
    ^
/Users/falcon/.rbenv/versions/2.6.5/include/ruby-2.6.0/ruby/ruby.h:2602:20: note: expanded from macro 'rb_funcall'
        rb_funcallv(recv, mid, \
                          ^~~
/Users/falcon/.rbenv/versions/2.6.5/include/ruby-2.6.0/ruby/ruby.h:1003:15: note: expanded from macro 'RSTRING_PTR'
    (!(RBASIC(str)->flags & RSTRING_NOEMBED) ? \
              ^~~
/Users/falcon/.rbenv/versions/2.6.5/include/ruby-2.6.0/ruby/ruby.h:1253:38: note: expanded from macro 'RBASIC'
#define RBASIC(obj)  (R_CAST(RBasic)(obj))
                                     ^~~
selector.c:206:95: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
            rb_raise(rb_eArgError, "unsupported backend: %s", RSTRING_PTR(rb_funcall(backend, rb_intern("inspect"), 0)));
                                                                                              ^~~~~~~~~~~~~~~~~~~~
/Users/falcon/.rbenv/versions/2.6.5/include/ruby-2.6.0/ruby/ruby.h:1826:24: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/falcon/.rbenv/versions/2.6.5/include/ruby-2.6.0/ruby/ruby.h:1816:5: note: expanded from macro 'RUBY_CONST_ID_CACHE'
    }
    ^
/Users/falcon/.rbenv/versions/2.6.5/include/ruby-2.6.0/ruby/ruby.h:2602:20: note: expanded from macro 'rb_funcall'
        rb_funcallv(recv, mid, \
                          ^~~
/Users/falcon/.rbenv/versions/2.6.5/include/ruby-2.6.0/ruby/ruby.h:1003:15: note: expanded from macro 'RSTRING_PTR'
    (!(RBASIC(str)->flags & RSTRING_NOEMBED) ? \
              ^~~
/Users/falcon/.rbenv/versions/2.6.5/include/ruby-2.6.0/ruby/ruby.h:1253:38: note: expanded from macro 'RBASIC'
#define RBASIC(obj)  (R_CAST(RBasic)(obj))
                                     ^~~
selector.c:206:95: note: ')' token is here
            rb_raise(rb_eArgError, "unsupported backend: %s", RSTRING_PTR(rb_funcall(backend, rb_intern("inspect"), 0)));
                                                                                              ^~~~~~~~~~~~~~~~~~~~
/Users/falcon/.rbenv/versions/2.6.5/include/ruby-2.6.0/ruby/ruby.h:1826:56: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                                                       ^
/Users/falcon/.rbenv/versions/2.6.5/include/ruby-2.6.0/ruby/ruby.h:2602:20: note: expanded from macro 'rb_funcall'
        rb_funcallv(recv, mid, \
                          ^~~
/Users/falcon/.rbenv/versions/2.6.5/include/ruby-2.6.0/ruby/ruby.h:1003:15: note: expanded from macro 'RSTRING_PTR'
    (!(RBASIC(str)->flags & RSTRING_NOEMBED) ? \
              ^~~
/Users/falcon/.rbenv/versions/2.6.5/include/ruby-2.6.0/ruby/ruby.h:1253:38: note: expanded from macro 'RBASIC'
#define RBASIC(obj)  (R_CAST(RBasic)(obj))
                                     ^~~
selector.c:206:95: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
            rb_raise(rb_eArgError, "unsupported backend: %s", RSTRING_PTR(rb_funcall(backend, rb_intern("inspect"), 0)));
                                                                                              ^~~~~~~~~~~~~~~~~~~~
/Users/falcon/.rbenv/versions/2.6.5/include/ruby-2.6.0/ruby/ruby.h:1826:23: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                      ^
/Users/falcon/.rbenv/versions/2.6.5/include/ruby-2.6.0/ruby/ruby.h:2602:20: note: expanded from macro 'rb_funcall'
        rb_funcallv(recv, mid, \
                          ^~~
/Users/falcon/.rbenv/versions/2.6.5/include/ruby-2.6.0/ruby/ruby.h:1004:14: note: expanded from macro 'RSTRING_PTR'
     RSTRING(str)->as.ary : \
             ^~~
/Users/falcon/.rbenv/versions/2.6.5/include/ruby-2.6.0/ruby/ruby.h:1257:39: note: expanded from macro 'RSTRING'
#define RSTRING(obj) (R_CAST(RString)(obj))
                                      ^~~
selector.c:206:95: note: '{' token is here
            rb_raise(rb_eArgError, "unsupported backend: %s", RSTRING_PTR(rb_funcall(backend, rb_intern("inspect"), 0)));
                                                                                              ^~~~~~~~~~~~~~~~~~~~
/Users/falcon/.rbenv/versions/2.6.5/include/ruby-2.6.0/ruby/ruby.h:1826:24: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/falcon/.rbenv/versions/2.6.5/include/ruby-2.6.0/ruby/ruby.h:1811:5: note: expanded from macro 'RUBY_CONST_ID_CACHE'
    {                                                   \
    ^
/Users/falcon/.rbenv/versions/2.6.5/include/ruby-2.6.0/ruby/ruby.h:2602:20: note: expanded from macro 'rb_funcall'
        rb_funcallv(recv, mid, \
                          ^~~
/Users/falcon/.rbenv/versions/2.6.5/include/ruby-2.6.0/ruby/ruby.h:1004:14: note: expanded from macro 'RSTRING_PTR'
     RSTRING(str)->as.ary : \
             ^~~
/Users/falcon/.rbenv/versions/2.6.5/include/ruby-2.6.0/ruby/ruby.h:1257:39: note: expanded from macro 'RSTRING'
#define RSTRING(obj) (R_CAST(RString)(obj))
                                      ^~~
selector.c:206:95: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
            rb_raise(rb_eArgError, "unsupported backend: %s", RSTRING_PTR(rb_funcall(backend, rb_intern("inspect"), 0)));
                                                                                              ^~~~~~~~~~~~~~~~~~~~
/Users/falcon/.rbenv/versions/2.6.5/include/ruby-2.6.0/ruby/ruby.h:1826:24: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/falcon/.rbenv/versions/2.6.5/include/ruby-2.6.0/ruby/ruby.h:1816:5: note: expanded from macro 'RUBY_CONST_ID_CACHE'
    }
    ^
/Users/falcon/.rbenv/versions/2.6.5/include/ruby-2.6.0/ruby/ruby.h:2602:20: note: expanded from macro 'rb_funcall'
        rb_funcallv(recv, mid, \
                          ^~~
/Users/falcon/.rbenv/versions/2.6.5/include/ruby-2.6.0/ruby/ruby.h:1004:14: note: expanded from macro 'RSTRING_PTR'
     RSTRING(str)->as.ary : \
             ^~~
/Users/falcon/.rbenv/versions/2.6.5/include/ruby-2.6.0/ruby/ruby.h:1257:39: note: expanded from macro 'RSTRING'
#define RSTRING(obj) (R_CAST(RString)(obj))
                                      ^~~
selector.c:206:95: note: ')' token is here
            rb_raise(rb_eArgError, "unsupported backend: %s", RSTRING_PTR(rb_funcall(backend, rb_intern("inspect"), 0)));
                                                                                              ^~~~~~~~~~~~~~~~~~~~
/Users/falcon/.rbenv/versions/2.6.5/include/ruby-2.6.0/ruby/ruby.h:1826:56: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                                                       ^
/Users/falcon/.rbenv/versions/2.6.5/include/ruby-2.6.0/ruby/ruby.h:2602:20: note: expanded from macro 'rb_funcall'
        rb_funcallv(recv, mid, \
                          ^~~
/Users/falcon/.rbenv/versions/2.6.5/include/ruby-2.6.0/ruby/ruby.h:1004:14: note: expanded from macro 'RSTRING_PTR'
     RSTRING(str)->as.ary : \
             ^~~
/Users/falcon/.rbenv/versions/2.6.5/include/ruby-2.6.0/ruby/ruby.h:1257:39: note: expanded from macro 'RSTRING'
#define RSTRING(obj) (R_CAST(RString)(obj))
                                      ^~~
selector.c:206:95: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
            rb_raise(rb_eArgError, "unsupported backend: %s", RSTRING_PTR(rb_funcall(backend, rb_intern("inspect"), 0)));
                                                                                              ^~~~~~~~~~~~~~~~~~~~
/Users/falcon/.rbenv/versions/2.6.5/include/ruby-2.6.0/ruby/ruby.h:1826:23: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                      ^
/Users/falcon/.rbenv/versions/2.6.5/include/ruby-2.6.0/ruby/ruby.h:2602:20: note: expanded from macro 'rb_funcall'
        rb_funcallv(recv, mid, \
                          ^~~
/Users/falcon/.rbenv/versions/2.6.5/include/ruby-2.6.0/ruby/ruby.h:1005:14: note: expanded from macro 'RSTRING_PTR'
     RSTRING(str)->as.heap.ptr)
             ^~~
/Users/falcon/.rbenv/versions/2.6.5/include/ruby-2.6.0/ruby/ruby.h:1257:39: note: expanded from macro 'RSTRING'
#define RSTRING(obj) (R_CAST(RString)(obj))
                                      ^~~
selector.c:206:95: note: '{' token is here
            rb_raise(rb_eArgError, "unsupported backend: %s", RSTRING_PTR(rb_funcall(backend, rb_intern("inspect"), 0)));
                                                                                              ^~~~~~~~~~~~~~~~~~~~
/Users/falcon/.rbenv/versions/2.6.5/include/ruby-2.6.0/ruby/ruby.h:1826:24: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/falcon/.rbenv/versions/2.6.5/include/ruby-2.6.0/ruby/ruby.h:1811:5: note: expanded from macro 'RUBY_CONST_ID_CACHE'
    {                                                   \
    ^
/Users/falcon/.rbenv/versions/2.6.5/include/ruby-2.6.0/ruby/ruby.h:2602:20: note: expanded from macro 'rb_funcall'
        rb_funcallv(recv, mid, \
                          ^~~
/Users/falcon/.rbenv/versions/2.6.5/include/ruby-2.6.0/ruby/ruby.h:1005:14: note: expanded from macro 'RSTRING_PTR'
     RSTRING(str)->as.heap.ptr)
             ^~~
/Users/falcon/.rbenv/versions/2.6.5/include/ruby-2.6.0/ruby/ruby.h:1257:39: note: expanded from macro 'RSTRING'
#define RSTRING(obj) (R_CAST(RString)(obj))
                                      ^~~
selector.c:206:95: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
            rb_raise(rb_eArgError, "unsupported backend: %s", RSTRING_PTR(rb_funcall(backend, rb_intern("inspect"), 0)));
                                                                                              ^~~~~~~~~~~~~~~~~~~~
/Users/falcon/.rbenv/versions/2.6.5/include/ruby-2.6.0/ruby/ruby.h:1826:24: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/falcon/.rbenv/versions/2.6.5/include/ruby-2.6.0/ruby/ruby.h:1816:5: note: expanded from macro 'RUBY_CONST_ID_CACHE'
    }
    ^
/Users/falcon/.rbenv/versions/2.6.5/include/ruby-2.6.0/ruby/ruby.h:2602:20: note: expanded from macro 'rb_funcall'
        rb_funcallv(recv, mid, \
                          ^~~
/Users/falcon/.rbenv/versions/2.6.5/include/ruby-2.6.0/ruby/ruby.h:1005:14: note: expanded from macro 'RSTRING_PTR'
     RSTRING(str)->as.heap.ptr)
             ^~~
/Users/falcon/.rbenv/versions/2.6.5/include/ruby-2.6.0/ruby/ruby.h:1257:39: note: expanded from macro 'RSTRING'
#define RSTRING(obj) (R_CAST(RString)(obj))
                                      ^~~
selector.c:206:95: note: ')' token is here
            rb_raise(rb_eArgError, "unsupported backend: %s", RSTRING_PTR(rb_funcall(backend, rb_intern("inspect"), 0)));
                                                                                              ^~~~~~~~~~~~~~~~~~~~
/Users/falcon/.rbenv/versions/2.6.5/include/ruby-2.6.0/ruby/ruby.h:1826:56: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                                                       ^
/Users/falcon/.rbenv/versions/2.6.5/include/ruby-2.6.0/ruby/ruby.h:2602:20: note: expanded from macro 'rb_funcall'
        rb_funcallv(recv, mid, \
                          ^~~
/Users/falcon/.rbenv/versions/2.6.5/include/ruby-2.6.0/ruby/ruby.h:1005:14: note: expanded from macro 'RSTRING_PTR'
     RSTRING(str)->as.heap.ptr)
             ^~~
/Users/falcon/.rbenv/versions/2.6.5/include/ruby-2.6.0/ruby/ruby.h:1257:39: note: expanded from macro 'RSTRING'
#define RSTRING(obj) (R_CAST(RString)(obj))
                                      ^~~
selector.c:211:27: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        if (backend_id == rb_intern("epoll")) {
                          ^~~~~~~~~~~~~~~~~~
/Users/falcon/.rbenv/versions/2.6.5/include/ruby-2.6.0/ruby/ruby.h:1826:23: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                      ^
selector.c:211:27: note: '{' token is here
        if (backend_id == rb_intern("epoll")) {
                          ^~~~~~~~~~~~~~~~~~
/Users/falcon/.rbenv/versions/2.6.5/include/ruby-2.6.0/ruby/ruby.h:1826:24: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/falcon/.rbenv/versions/2.6.5/include/ruby-2.6.0/ruby/ruby.h:1811:5: note: expanded from macro 'RUBY_CONST_ID_CACHE'
    {                                                   \
    ^
selector.c:211:27: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        if (backend_id == rb_intern("epoll")) {
                          ^~~~~~~~~~~~~~~~~~
/Users/falcon/.rbenv/versions/2.6.5/include/ruby-2.6.0/ruby/ruby.h:1826:24: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/falcon/.rbenv/versions/2.6.5/include/ruby-2.6.0/ruby/ruby.h:1816:5: note: expanded from macro 'RUBY_CONST_ID_CACHE'
    }
    ^
selector.c:211:27: note: ')' token is here
        if (backend_id == rb_intern("epoll")) {
                          ^~~~~~~~~~~~~~~~~~
/Users/falcon/.rbenv/versions/2.6.5/include/ruby-2.6.0/ruby/ruby.h:1826:56: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                                                       ^
selector.c:213:34: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        } else if (backend_id == rb_intern("poll")) {
                                 ^~~~~~~~~~~~~~~~~
/Users/falcon/.rbenv/versions/2.6.5/include/ruby-2.6.0/ruby/ruby.h:1826:23: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                      ^
selector.c:213:34: note: '{' token is here
        } else if (backend_id == rb_intern("poll")) {
                                 ^~~~~~~~~~~~~~~~~
/Users/falcon/.rbenv/versions/2.6.5/include/ruby-2.6.0/ruby/ruby.h:1826:24: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/falcon/.rbenv/versions/2.6.5/include/ruby-2.6.0/ruby/ruby.h:1811:5: note: expanded from macro 'RUBY_CONST_ID_CACHE'
    {                                                   \
    ^
selector.c:213:34: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        } else if (backend_id == rb_intern("poll")) {
                                 ^~~~~~~~~~~~~~~~~
/Users/falcon/.rbenv/versions/2.6.5/include/ruby-2.6.0/ruby/ruby.h:1826:24: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/falcon/.rbenv/versions/2.6.5/include/ruby-2.6.0/ruby/ruby.h:1816:5: note: expanded from macro 'RUBY_CONST_ID_CACHE'
    }
    ^
selector.c:213:34: note: ')' token is here
        } else if (backend_id == rb_intern("poll")) {
                                 ^~~~~~~~~~~~~~~~~
/Users/falcon/.rbenv/versions/2.6.5/include/ruby-2.6.0/ruby/ruby.h:1826:56: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                                                       ^
selector.c:215:34: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        } else if (backend_id == rb_intern("kqueue")) {
                                 ^~~~~~~~~~~~~~~~~~~
/Users/falcon/.rbenv/versions/2.6.5/include/ruby-2.6.0/ruby/ruby.h:1826:23: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                      ^
selector.c:215:34: note: '{' token is here
        } else if (backend_id == rb_intern("kqueue")) {
                                 ^~~~~~~~~~~~~~~~~~~
/Users/falcon/.rbenv/versions/2.6.5/include/ruby-2.6.0/ruby/ruby.h:1826:24: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/falcon/.rbenv/versions/2.6.5/include/ruby-2.6.0/ruby/ruby.h:1811:5: note: expanded from macro 'RUBY_CONST_ID_CACHE'
    {                                                   \
    ^
selector.c:215:34: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        } else if (backend_id == rb_intern("kqueue")) {
                                 ^~~~~~~~~~~~~~~~~~~
/Users/falcon/.rbenv/versions/2.6.5/include/ruby-2.6.0/ruby/ruby.h:1826:24: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/falcon/.rbenv/versions/2.6.5/include/ruby-2.6.0/ruby/ruby.h:1816:5: note: expanded from macro 'RUBY_CONST_ID_CACHE'
    }
    ^
selector.c:215:34: note: ')' token is here
        } else if (backend_id == rb_intern("kqueue")) {
                                 ^~~~~~~~~~~~~~~~~~~
/Users/falcon/.rbenv/versions/2.6.5/include/ruby-2.6.0/ruby/ruby.h:1826:56: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                                                       ^
selector.c:217:34: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        } else if (backend_id == rb_intern("select")) {
                                 ^~~~~~~~~~~~~~~~~~~
/Users/falcon/.rbenv/versions/2.6.5/include/ruby-2.6.0/ruby/ruby.h:1826:23: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                      ^
selector.c:217:34: note: '{' token is here
        } else if (backend_id == rb_intern("select")) {
                                 ^~~~~~~~~~~~~~~~~~~
/Users/falcon/.rbenv/versions/2.6.5/include/ruby-2.6.0/ruby/ruby.h:1826:24: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/falcon/.rbenv/versions/2.6.5/include/ruby-2.6.0/ruby/ruby.h:1811:5: note: expanded from macro 'RUBY_CONST_ID_CACHE'
    {                                                   \
    ^
selector.c:217:34: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        } else if (backend_id == rb_intern("select")) {
                                 ^~~~~~~~~~~~~~~~~~~
/Users/falcon/.rbenv/versions/2.6.5/include/ruby-2.6.0/ruby/ruby.h:1826:24: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/falcon/.rbenv/versions/2.6.5/include/ruby-2.6.0/ruby/ruby.h:1816:5: note: expanded from macro 'RUBY_CONST_ID_CACHE'
    }
    ^
selector.c:217:34: note: ')' token is here
        } else if (backend_id == rb_intern("select")) {
                                 ^~~~~~~~~~~~~~~~~~~
/Users/falcon/.rbenv/versions/2.6.5/include/ruby-2.6.0/ruby/ruby.h:1826:56: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                                                       ^
selector.c:219:34: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        } else if (backend_id == rb_intern("port")) {
                                 ^~~~~~~~~~~~~~~~~
/Users/falcon/.rbenv/versions/2.6.5/include/ruby-2.6.0/ruby/ruby.h:1826:23: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                      ^
selector.c:219:34: note: '{' token is here
        } else if (backend_id == rb_intern("port")) {
                                 ^~~~~~~~~~~~~~~~~
/Users/falcon/.rbenv/versions/2.6.5/include/ruby-2.6.0/ruby/ruby.h:1826:24: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/falcon/.rbenv/versions/2.6.5/include/ruby-2.6.0/ruby/ruby.h:1811:5: note: expanded from macro 'RUBY_CONST_ID_CACHE'
    {                                                   \
    ^
selector.c:219:34: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        } else if (backend_id == rb_intern("port")) {
                                 ^~~~~~~~~~~~~~~~~
/Users/falcon/.rbenv/versions/2.6.5/include/ruby-2.6.0/ruby/ruby.h:1826:24: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/falcon/.rbenv/versions/2.6.5/include/ruby-2.6.0/ruby/ruby.h:1816:5: note: expanded from macro 'RUBY_CONST_ID_CACHE'
    }
    ^
selector.c:219:34: note: ')' token is here
        } else if (backend_id == rb_intern("port")) {
                                 ^~~~~~~~~~~~~~~~~
/Users/falcon/.rbenv/versions/2.6.5/include/ruby-2.6.0/ruby/ruby.h:1826:56: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                                                       ^
selector.c:222:95: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
            rb_raise(rb_eArgError, "unsupported backend: %s", RSTRING_PTR(rb_funcall(backend, rb_intern("inspect"), 0)));
                                                                                              ^~~~~~~~~~~~~~~~~~~~
/Users/falcon/.rbenv/versions/2.6.5/include/ruby-2.6.0/ruby/ruby.h:1826:23: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                      ^
/Users/falcon/.rbenv/versions/2.6.5/include/ruby-2.6.0/ruby/ruby.h:2602:20: note: expanded from macro 'rb_funcall'
        rb_funcallv(recv, mid, \
                          ^~~
/Users/falcon/.rbenv/versions/2.6.5/include/ruby-2.6.0/ruby/ruby.h:1003:15: note: expanded from macro 'RSTRING_PTR'
    (!(RBASIC(str)->flags & RSTRING_NOEMBED) ? \
              ^~~
/Users/falcon/.rbenv/versions/2.6.5/include/ruby-2.6.0/ruby/ruby.h:1253:38: note: expanded from macro 'RBASIC'
#define RBASIC(obj)  (R_CAST(RBasic)(obj))
                                     ^~~
selector.c:222:95: note: '{' token is here
            rb_raise(rb_eArgError, "unsupported backend: %s", RSTRING_PTR(rb_funcall(backend, rb_intern("inspect"), 0)));
                                                                                              ^~~~~~~~~~~~~~~~~~~~
/Users/falcon/.rbenv/versions/2.6.5/include/ruby-2.6.0/ruby/ruby.h:1826:24: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/falcon/.rbenv/versions/2.6.5/include/ruby-2.6.0/ruby/ruby.h:1811:5: note: expanded from macro 'RUBY_CONST_ID_CACHE'
    {                                                   \
    ^
/Users/falcon/.rbenv/versions/2.6.5/include/ruby-2.6.0/ruby/ruby.h:2602:20: note: expanded from macro 'rb_funcall'
        rb_funcallv(recv, mid, \
                          ^~~
/Users/falcon/.rbenv/versions/2.6.5/include/ruby-2.6.0/ruby/ruby.h:1003:15: note: expanded from macro 'RSTRING_PTR'
    (!(RBASIC(str)->flags & RSTRING_NOEMBED) ? \
              ^~~
/Users/falcon/.rbenv/versions/2.6.5/include/ruby-2.6.0/ruby/ruby.h:1253:38: note: expanded from macro 'RBASIC'
#define RBASIC(obj)  (R_CAST(RBasic)(obj))
                                     ^~~
selector.c:222:95: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
            rb_raise(rb_eArgError, "unsupported backend: %s", RSTRING_PTR(rb_funcall(backend, rb_intern("inspect"), 0)));
                                                                                              ^~~~~~~~~~~~~~~~~~~~
/Users/falcon/.rbenv/versions/2.6.5/include/ruby-2.6.0/ruby/ruby.h:1826:24: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/falcon/.rbenv/versions/2.6.5/include/ruby-2.6.0/ruby/ruby.h:1816:5: note: expanded from macro 'RUBY_CONST_ID_CACHE'
    }
    ^
/Users/falcon/.rbenv/versions/2.6.5/include/ruby-2.6.0/ruby/ruby.h:2602:20: note: expanded from macro 'rb_funcall'
        rb_funcallv(recv, mid, \
                          ^~~
/Users/falcon/.rbenv/versions/2.6.5/include/ruby-2.6.0/ruby/ruby.h:1003:15: note: expanded from macro 'RSTRING_PTR'
    (!(RBASIC(str)->flags & RSTRING_NOEMBED) ? \
              ^~~
/Users/falcon/.rbenv/versions/2.6.5/include/ruby-2.6.0/ruby/ruby.h:1253:38: note: expanded from macro 'RBASIC'
#define RBASIC(obj)  (R_CAST(RBasic)(obj))
                                     ^~~
selector.c:222:95: note: ')' token is here
            rb_raise(rb_eArgError, "unsupported backend: %s", RSTRING_PTR(rb_funcall(backend, rb_intern("inspect"), 0)));
                                                                                              ^~~~~~~~~~~~~~~~~~~~
/Users/falcon/.rbenv/versions/2.6.5/include/ruby-2.6.0/ruby/ruby.h:1826:56: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                                                       ^
/Users/falcon/.rbenv/versions/2.6.5/include/ruby-2.6.0/ruby/ruby.h:2602:20: note: expanded from macro 'rb_funcall'
        rb_funcallv(recv, mid, \
                          ^~~
/Users/falcon/.rbenv/versions/2.6.5/include/ruby-2.6.0/ruby/ruby.h:1003:15: note: expanded from macro 'RSTRING_PTR'
    (!(RBASIC(str)->flags & RSTRING_NOEMBED) ? \
              ^~~
/Users/falcon/.rbenv/versions/2.6.5/include/ruby-2.6.0/ruby/ruby.h:1253:38: note: expanded from macro 'RBASIC'
#define RBASIC(obj)  (R_CAST(RBasic)(obj))
                                     ^~~
selector.c:222:95: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
            rb_raise(rb_eArgError, "unsupported backend: %s", RSTRING_PTR(rb_funcall(backend, rb_intern("inspect"), 0)));
                                                                                              ^~~~~~~~~~~~~~~~~~~~
/Users/falcon/.rbenv/versions/2.6.5/include/ruby-2.6.0/ruby/ruby.h:1826:23: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                      ^
/Users/falcon/.rbenv/versions/2.6.5/include/ruby-2.6.0/ruby/ruby.h:2602:20: note: expanded from macro 'rb_funcall'
        rb_funcallv(recv, mid, \
                          ^~~
/Users/falcon/.rbenv/versions/2.6.5/include/ruby-2.6.0/ruby/ruby.h:1004:14: note: expanded from macro 'RSTRING_PTR'
     RSTRING(str)->as.ary : \
             ^~~
/Users/falcon/.rbenv/versions/2.6.5/include/ruby-2.6.0/ruby/ruby.h:1257:39: note: expanded from macro 'RSTRING'
#define RSTRING(obj) (R_CAST(RString)(obj))
                                      ^~~
selector.c:222:95: note: '{' token is here
            rb_raise(rb_eArgError, "unsupported backend: %s", RSTRING_PTR(rb_funcall(backend, rb_intern("inspect"), 0)));
                                                                                              ^~~~~~~~~~~~~~~~~~~~
/Users/falcon/.rbenv/versions/2.6.5/include/ruby-2.6.0/ruby/ruby.h:1826:24: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/falcon/.rbenv/versions/2.6.5/include/ruby-2.6.0/ruby/ruby.h:1811:5: note: expanded from macro 'RUBY_CONST_ID_CACHE'
    {                                                   \
    ^
/Users/falcon/.rbenv/versions/2.6.5/include/ruby-2.6.0/ruby/ruby.h:2602:20: note: expanded from macro 'rb_funcall'
        rb_funcallv(recv, mid, \
                          ^~~
/Users/falcon/.rbenv/versions/2.6.5/include/ruby-2.6.0/ruby/ruby.h:1004:14: note: expanded from macro 'RSTRING_PTR'
     RSTRING(str)->as.ary : \
             ^~~
/Users/falcon/.rbenv/versions/2.6.5/include/ruby-2.6.0/ruby/ruby.h:1257:39: note: expanded from macro 'RSTRING'
#define RSTRING(obj) (R_CAST(RString)(obj))
                                      ^~~
selector.c:222:95: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
            rb_raise(rb_eArgError, "unsupported backend: %s", RSTRING_PTR(rb_funcall(backend, rb_intern("inspect"), 0)));
                                                                                              ^~~~~~~~~~~~~~~~~~~~
/Users/falcon/.rbenv/versions/2.6.5/include/ruby-2.6.0/ruby/ruby.h:1826:24: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/falcon/.rbenv/versions/2.6.5/include/ruby-2.6.0/ruby/ruby.h:1816:5: note: expanded from macro 'RUBY_CONST_ID_CACHE'
    }
    ^
/Users/falcon/.rbenv/versions/2.6.5/include/ruby-2.6.0/ruby/ruby.h:2602:20: note: expanded from macro 'rb_funcall'
        rb_funcallv(recv, mid, \
                          ^~~
/Users/falcon/.rbenv/versions/2.6.5/include/ruby-2.6.0/ruby/ruby.h:1004:14: note: expanded from macro 'RSTRING_PTR'
     RSTRING(str)->as.ary : \
             ^~~
/Users/falcon/.rbenv/versions/2.6.5/include/ruby-2.6.0/ruby/ruby.h:1257:39: note: expanded from macro 'RSTRING'
#define RSTRING(obj) (R_CAST(RString)(obj))
                                      ^~~
selector.c:222:95: note: ')' token is here
            rb_raise(rb_eArgError, "unsupported backend: %s", RSTRING_PTR(rb_funcall(backend, rb_intern("inspect"), 0)));
                                                                                              ^~~~~~~~~~~~~~~~~~~~
/Users/falcon/.rbenv/versions/2.6.5/include/ruby-2.6.0/ruby/ruby.h:1826:56: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                                                       ^
/Users/falcon/.rbenv/versions/2.6.5/include/ruby-2.6.0/ruby/ruby.h:2602:20: note: expanded from macro 'rb_funcall'
        rb_funcallv(recv, mid, \
                          ^~~
/Users/falcon/.rbenv/versions/2.6.5/include/ruby-2.6.0/ruby/ruby.h:1004:14: note: expanded from macro 'RSTRING_PTR'
     RSTRING(str)->as.ary : \
             ^~~
/Users/falcon/.rbenv/versions/2.6.5/include/ruby-2.6.0/ruby/ruby.h:1257:39: note: expanded from macro 'RSTRING'
#define RSTRING(obj) (R_CAST(RString)(obj))
                                      ^~~
selector.c:222:95: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
            rb_raise(rb_eArgError, "unsupported backend: %s", RSTRING_PTR(rb_funcall(backend, rb_intern("inspect"), 0)));
                                                                                              ^~~~~~~~~~~~~~~~~~~~
/Users/falcon/.rbenv/versions/2.6.5/include/ruby-2.6.0/ruby/ruby.h:1826:23: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                      ^
/Users/falcon/.rbenv/versions/2.6.5/include/ruby-2.6.0/ruby/ruby.h:2602:20: note: expanded from macro 'rb_funcall'
        rb_funcallv(recv, mid, \
                          ^~~
/Users/falcon/.rbenv/versions/2.6.5/include/ruby-2.6.0/ruby/ruby.h:1005:14: note: expanded from macro 'RSTRING_PTR'
     RSTRING(str)->as.heap.ptr)
             ^~~
/Users/falcon/.rbenv/versions/2.6.5/include/ruby-2.6.0/ruby/ruby.h:1257:39: note: expanded from macro 'RSTRING'
#define RSTRING(obj) (R_CAST(RString)(obj))
                                      ^~~
selector.c:222:95: note: '{' token is here
            rb_raise(rb_eArgError, "unsupported backend: %s", RSTRING_PTR(rb_funcall(backend, rb_intern("inspect"), 0)));
                                                                                              ^~~~~~~~~~~~~~~~~~~~
/Users/falcon/.rbenv/versions/2.6.5/include/ruby-2.6.0/ruby/ruby.h:1826:24: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/falcon/.rbenv/versions/2.6.5/include/ruby-2.6.0/ruby/ruby.h:1811:5: note: expanded from macro 'RUBY_CONST_ID_CACHE'
    {                                                   \
    ^
/Users/falcon/.rbenv/versions/2.6.5/include/ruby-2.6.0/ruby/ruby.h:2602:20: note: expanded from macro 'rb_funcall'
        rb_funcallv(recv, mid, \
                          ^~~
/Users/falcon/.rbenv/versions/2.6.5/include/ruby-2.6.0/ruby/ruby.h:1005:14: note: expanded from macro 'RSTRING_PTR'
     RSTRING(str)->as.heap.ptr)
             ^~~
/Users/falcon/.rbenv/versions/2.6.5/include/ruby-2.6.0/ruby/ruby.h:1257:39: note: expanded from macro 'RSTRING'
#define RSTRING(obj) (R_CAST(RString)(obj))
                                      ^~~
selector.c:222:95: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
            rb_raise(rb_eArgError, "unsupported backend: %s", RSTRING_PTR(rb_funcall(backend, rb_intern("inspect"), 0)));
                                                                                              ^~~~~~~~~~~~~~~~~~~~
/Users/falcon/.rbenv/versions/2.6.5/include/ruby-2.6.0/ruby/ruby.h:1826:24: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/falcon/.rbenv/versions/2.6.5/include/ruby-2.6.0/ruby/ruby.h:1816:5: note: expanded from macro 'RUBY_CONST_ID_CACHE'
    }
    ^
/Users/falcon/.rbenv/versions/2.6.5/include/ruby-2.6.0/ruby/ruby.h:2602:20: note: expanded from macro 'rb_funcall'
        rb_funcallv(recv, mid, \
                          ^~~
/Users/falcon/.rbenv/versions/2.6.5/include/ruby-2.6.0/ruby/ruby.h:1005:14: note: expanded from macro 'RSTRING_PTR'
     RSTRING(str)->as.heap.ptr)
             ^~~
/Users/falcon/.rbenv/versions/2.6.5/include/ruby-2.6.0/ruby/ruby.h:1257:39: note: expanded from macro 'RSTRING'
#define RSTRING(obj) (R_CAST(RString)(obj))
                                      ^~~
selector.c:222:95: note: ')' token is here
            rb_raise(rb_eArgError, "unsupported backend: %s", RSTRING_PTR(rb_funcall(backend, rb_intern("inspect"), 0)));
                                                                                              ^~~~~~~~~~~~~~~~~~~~
/Users/falcon/.rbenv/versions/2.6.5/include/ruby-2.6.0/ruby/ruby.h:1826:56: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                                                       ^
/Users/falcon/.rbenv/versions/2.6.5/include/ruby-2.6.0/ruby/ruby.h:2602:20: note: expanded from macro 'rb_funcall'
        rb_funcallv(recv, mid, \
                          ^~~
/Users/falcon/.rbenv/versions/2.6.5/include/ruby-2.6.0/ruby/ruby.h:1005:14: note: expanded from macro 'RSTRING_PTR'
     RSTRING(str)->as.heap.ptr)
             ^~~
/Users/falcon/.rbenv/versions/2.6.5/include/ruby-2.6.0/ruby/ruby.h:1257:39: note: expanded from macro 'RSTRING'
#define RSTRING(obj) (R_CAST(RString)(obj))
                                      ^~~
selector.c:236:23: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    rb_ivar_set(self, rb_intern("selectables"), rb_hash_new());
                      ^~~~~~~~~~~~~~~~~~~~~~~~
/Users/falcon/.rbenv/versions/2.6.5/include/ruby-2.6.0/ruby/ruby.h:1826:23: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                      ^
selector.c:236:23: note: '{' token is here
    rb_ivar_set(self, rb_intern("selectables"), rb_hash_new());
                      ^~~~~~~~~~~~~~~~~~~~~~~~
/Users/falcon/.rbenv/versions/2.6.5/include/ruby-2.6.0/ruby/ruby.h:1826:24: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/falcon/.rbenv/versions/2.6.5/include/ruby-2.6.0/ruby/ruby.h:1811:5: note: expanded from macro 'RUBY_CONST_ID_CACHE'
    {                                                   \
    ^
selector.c:236:23: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    rb_ivar_set(self, rb_intern("selectables"), rb_hash_new());
                      ^~~~~~~~~~~~~~~~~~~~~~~~
/Users/falcon/.rbenv/versions/2.6.5/include/ruby-2.6.0/ruby/ruby.h:1826:24: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/falcon/.rbenv/versions/2.6.5/include/ruby-2.6.0/ruby/ruby.h:1816:5: note: expanded from macro 'RUBY_CONST_ID_CACHE'
    }
    ^
selector.c:236:23: note: ')' token is here
    rb_ivar_set(self, rb_intern("selectables"), rb_hash_new());
                      ^~~~~~~~~~~~~~~~~~~~~~~~
/Users/falcon/.rbenv/versions/2.6.5/include/ruby-2.6.0/ruby/ruby.h:1826:56: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                                                       ^
selector.c:237:23: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    rb_ivar_set(self, rb_intern("lock_holder"), Qnil);
                      ^~~~~~~~~~~~~~~~~~~~~~~~
/Users/falcon/.rbenv/versions/2.6.5/include/ruby-2.6.0/ruby/ruby.h:1826:23: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                      ^
selector.c:237:23: note: '{' token is here
    rb_ivar_set(self, rb_intern("lock_holder"), Qnil);
                      ^~~~~~~~~~~~~~~~~~~~~~~~
/Users/falcon/.rbenv/versions/2.6.5/include/ruby-2.6.0/ruby/ruby.h:1826:24: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/falcon/.rbenv/versions/2.6.5/include/ruby-2.6.0/ruby/ruby.h:1811:5: note: expanded from macro 'RUBY_CONST_ID_CACHE'
    {                                                   \
    ^
selector.c:237:23: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    rb_ivar_set(self, rb_intern("lock_holder"), Qnil);
                      ^~~~~~~~~~~~~~~~~~~~~~~~
/Users/falcon/.rbenv/versions/2.6.5/include/ruby-2.6.0/ruby/ruby.h:1826:24: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/falcon/.rbenv/versions/2.6.5/include/ruby-2.6.0/ruby/ruby.h:1816:5: note: expanded from macro 'RUBY_CONST_ID_CACHE'
    }
    ^
selector.c:237:23: note: ')' token is here
    rb_ivar_set(self, rb_intern("lock_holder"), Qnil);
                      ^~~~~~~~~~~~~~~~~~~~~~~~
/Users/falcon/.rbenv/versions/2.6.5/include/ruby-2.6.0/ruby/ruby.h:1826:56: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                                                       ^
selector.c:239:65: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    lock = rb_class_new_instance(0, 0, rb_const_get(rb_cObject, rb_intern("Mutex")));
                                                                ^~~~~~~~~~~~~~~~~~
/Users/falcon/.rbenv/versions/2.6.5/include/ruby-2.6.0/ruby/ruby.h:1826:23: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                      ^
selector.c:239:65: note: '{' token is here
    lock = rb_class_new_instance(0, 0, rb_const_get(rb_cObject, rb_intern("Mutex")));
                                                                ^~~~~~~~~~~~~~~~~~
/Users/falcon/.rbenv/versions/2.6.5/include/ruby-2.6.0/ruby/ruby.h:1826:24: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/falcon/.rbenv/versions/2.6.5/include/ruby-2.6.0/ruby/ruby.h:1811:5: note: expanded from macro 'RUBY_CONST_ID_CACHE'
    {                                                   \
    ^
selector.c:239:65: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    lock = rb_class_new_instance(0, 0, rb_const_get(rb_cObject, rb_intern("Mutex")));
                                                                ^~~~~~~~~~~~~~~~~~
/Users/falcon/.rbenv/versions/2.6.5/include/ruby-2.6.0/ruby/ruby.h:1826:24: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/falcon/.rbenv/versions/2.6.5/include/ruby-2.6.0/ruby/ruby.h:1816:5: note: expanded from macro 'RUBY_CONST_ID_CACHE'
    }
    ^
selector.c:239:65: note: ')' token is here
    lock = rb_class_new_instance(0, 0, rb_const_get(rb_cObject, rb_intern("Mutex")));
                                                                ^~~~~~~~~~~~~~~~~~
/Users/falcon/.rbenv/versions/2.6.5/include/ruby-2.6.0/ruby/ruby.h:1826:56: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                                                       ^
selector.c:240:23: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    rb_ivar_set(self, rb_intern("lock"), lock);
                      ^~~~~~~~~~~~~~~~~
/Users/falcon/.rbenv/versions/2.6.5/include/ruby-2.6.0/ruby/ruby.h:1826:23: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                      ^
selector.c:240:23: note: '{' token is here
    rb_ivar_set(self, rb_intern("lock"), lock);
                      ^~~~~~~~~~~~~~~~~
/Users/falcon/.rbenv/versions/2.6.5/include/ruby-2.6.0/ruby/ruby.h:1826:24: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/falcon/.rbenv/versions/2.6.5/include/ruby-2.6.0/ruby/ruby.h:1811:5: note: expanded from macro 'RUBY_CONST_ID_CACHE'
    {                                                   \
    ^
selector.c:240:23: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    rb_ivar_set(self, rb_intern("lock"), lock);
                      ^~~~~~~~~~~~~~~~~
/Users/falcon/.rbenv/versions/2.6.5/include/ruby-2.6.0/ruby/ruby.h:1826:24: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/falcon/.rbenv/versions/2.6.5/include/ruby-2.6.0/ruby/ruby.h:1816:5: note: expanded from macro 'RUBY_CONST_ID_CACHE'
    }
    ^
selector.c:240:23: note: ')' token is here
    rb_ivar_set(self, rb_intern("lock"), lock);
                      ^~~~~~~~~~~~~~~~~
/Users/falcon/.rbenv/versions/2.6.5/include/ruby-2.6.0/ruby/ruby.h:1826:56: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                                                       ^
selector.c:241:23: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    rb_ivar_set(self, rb_intern("lock_holder"), Qnil);
                      ^~~~~~~~~~~~~~~~~~~~~~~~
/Users/falcon/.rbenv/versions/2.6.5/include/ruby-2.6.0/ruby/ruby.h:1826:23: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                      ^
selector.c:241:23: note: '{' token is here
    rb_ivar_set(self, rb_intern("lock_holder"), Qnil);
                      ^~~~~~~~~~~~~~~~~~~~~~~~
/Users/falcon/.rbenv/versions/2.6.5/include/ruby-2.6.0/ruby/ruby.h:1826:24: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/falcon/.rbenv/versions/2.6.5/include/ruby-2.6.0/ruby/ruby.h:1811:5: note: expanded from macro 'RUBY_CONST_ID_CACHE'
    {                                                   \
    ^
selector.c:241:23: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    rb_ivar_set(self, rb_intern("lock_holder"), Qnil);
                      ^~~~~~~~~~~~~~~~~~~~~~~~
/Users/falcon/.rbenv/versions/2.6.5/include/ruby-2.6.0/ruby/ruby.h:1826:24: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/falcon/.rbenv/versions/2.6.5/include/ruby-2.6.0/ruby/ruby.h:1816:5: note: expanded from macro 'RUBY_CONST_ID_CACHE'
    }
    ^
selector.c:241:23: note: ')' token is here
    rb_ivar_set(self, rb_intern("lock_holder"), Qnil);
                      ^~~~~~~~~~~~~~~~~~~~~~~~
/Users/falcon/.rbenv/versions/2.6.5/include/ruby-2.6.0/ruby/ruby.h:1826:56: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                                                       ^
selector.c:257:27: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
            return ID2SYM(rb_intern("epoll"));
                          ^~~~~~~~~~~~~~~~~~
/Users/falcon/.rbenv/versions/2.6.5/include/ruby-2.6.0/ruby/ruby.h:1826:23: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                      ^
/Users/falcon/.rbenv/versions/2.6.5/include/ruby-2.6.0/ruby/ruby.h:413:29: note: expanded from macro 'ID2SYM'
#define ID2SYM(x) RB_ID2SYM(x)
                            ^
/Users/falcon/.rbenv/versions/2.6.5/include/ruby-2.6.0/ruby/ruby.h:408:33: note: expanded from macro 'RB_ID2SYM'
#define RB_ID2SYM(x) (rb_id2sym(x))
                                ^
selector.c:257:27: note: '{' token is here
            return ID2SYM(rb_intern("epoll"));
                          ^~~~~~~~~~~~~~~~~~
/Users/falcon/.rbenv/versions/2.6.5/include/ruby-2.6.0/ruby/ruby.h:1826:24: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/falcon/.rbenv/versions/2.6.5/include/ruby-2.6.0/ruby/ruby.h:1811:5: note: expanded from macro 'RUBY_CONST_ID_CACHE'
    {                                                   \
    ^
/Users/falcon/.rbenv/versions/2.6.5/include/ruby-2.6.0/ruby/ruby.h:413:29: note: expanded from macro 'ID2SYM'
#define ID2SYM(x) RB_ID2SYM(x)
                            ^
/Users/falcon/.rbenv/versions/2.6.5/include/ruby-2.6.0/ruby/ruby.h:408:33: note: expanded from macro 'RB_ID2SYM'
#define RB_ID2SYM(x) (rb_id2sym(x))
                                ^
selector.c:257:27: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
            return ID2SYM(rb_intern("epoll"));
                          ^~~~~~~~~~~~~~~~~~
/Users/falcon/.rbenv/versions/2.6.5/include/ruby-2.6.0/ruby/ruby.h:1826:24: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/falcon/.rbenv/versions/2.6.5/include/ruby-2.6.0/ruby/ruby.h:1816:5: note: expanded from macro 'RUBY_CONST_ID_CACHE'
    }
    ^
/Users/falcon/.rbenv/versions/2.6.5/include/ruby-2.6.0/ruby/ruby.h:413:29: note: expanded from macro 'ID2SYM'
#define ID2SYM(x) RB_ID2SYM(x)
                            ^
/Users/falcon/.rbenv/versions/2.6.5/include/ruby-2.6.0/ruby/ruby.h:408:33: note: expanded from macro 'RB_ID2SYM'
#define RB_ID2SYM(x) (rb_id2sym(x))
                                ^
selector.c:257:27: note: ')' token is here
            return ID2SYM(rb_intern("epoll"));
                          ^~~~~~~~~~~~~~~~~~
/Users/falcon/.rbenv/versions/2.6.5/include/ruby-2.6.0/ruby/ruby.h:1826:56: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                                                       ^
/Users/falcon/.rbenv/versions/2.6.5/include/ruby-2.6.0/ruby/ruby.h:413:29: note: expanded from macro 'ID2SYM'
#define ID2SYM(x) RB_ID2SYM(x)
                            ^
/Users/falcon/.rbenv/versions/2.6.5/include/ruby-2.6.0/ruby/ruby.h:408:33: note: expanded from macro 'RB_ID2SYM'
#define RB_ID2SYM(x) (rb_id2sym(x))
                                ^
selector.c:259:27: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
            return ID2SYM(rb_intern("poll"));
                          ^~~~~~~~~~~~~~~~~
/Users/falcon/.rbenv/versions/2.6.5/include/ruby-2.6.0/ruby/ruby.h:1826:23: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                      ^
/Users/falcon/.rbenv/versions/2.6.5/include/ruby-2.6.0/ruby/ruby.h:413:29: note: expanded from macro 'ID2SYM'
#define ID2SYM(x) RB_ID2SYM(x)
                            ^
/Users/falcon/.rbenv/versions/2.6.5/include/ruby-2.6.0/ruby/ruby.h:408:33: note: expanded from macro 'RB_ID2SYM'
#define RB_ID2SYM(x) (rb_id2sym(x))
                                ^
selector.c:259:27: note: '{' token is here
            return ID2SYM(rb_intern("poll"));
                          ^~~~~~~~~~~~~~~~~
/Users/falcon/.rbenv/versions/2.6.5/include/ruby-2.6.0/ruby/ruby.h:1826:24: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/falcon/.rbenv/versions/2.6.5/include/ruby-2.6.0/ruby/ruby.h:1811:5: note: expanded from macro 'RUBY_CONST_ID_CACHE'
    {                                                   \
    ^
/Users/falcon/.rbenv/versions/2.6.5/include/ruby-2.6.0/ruby/ruby.h:413:29: note: expanded from macro 'ID2SYM'
#define ID2SYM(x) RB_ID2SYM(x)
                            ^
/Users/falcon/.rbenv/versions/2.6.5/include/ruby-2.6.0/ruby/ruby.h:408:33: note: expanded from macro 'RB_ID2SYM'
#define RB_ID2SYM(x) (rb_id2sym(x))
                                ^
selector.c:259:27: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
            return ID2SYM(rb_intern("poll"));
                          ^~~~~~~~~~~~~~~~~
/Users/falcon/.rbenv/versions/2.6.5/include/ruby-2.6.0/ruby/ruby.h:1826:24: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/falcon/.rbenv/versions/2.6.5/include/ruby-2.6.0/ruby/ruby.h:1816:5: note: expanded from macro 'RUBY_CONST_ID_CACHE'
    }
    ^
/Users/falcon/.rbenv/versions/2.6.5/include/ruby-2.6.0/ruby/ruby.h:413:29: note: expanded from macro 'ID2SYM'
#define ID2SYM(x) RB_ID2SYM(x)
                            ^
/Users/falcon/.rbenv/versions/2.6.5/include/ruby-2.6.0/ruby/ruby.h:408:33: note: expanded from macro 'RB_ID2SYM'
#define RB_ID2SYM(x) (rb_id2sym(x))
                                ^
selector.c:259:27: note: ')' token is here
            return ID2SYM(rb_intern("poll"));
                          ^~~~~~~~~~~~~~~~~
/Users/falcon/.rbenv/versions/2.6.5/include/ruby-2.6.0/ruby/ruby.h:1826:56: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                                                       ^
/Users/falcon/.rbenv/versions/2.6.5/include/ruby-2.6.0/ruby/ruby.h:413:29: note: expanded from macro 'ID2SYM'
#define ID2SYM(x) RB_ID2SYM(x)
                            ^
/Users/falcon/.rbenv/versions/2.6.5/include/ruby-2.6.0/ruby/ruby.h:408:33: note: expanded from macro 'RB_ID2SYM'
#define RB_ID2SYM(x) (rb_id2sym(x))
                                ^
selector.c:261:27: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
            return ID2SYM(rb_intern("kqueue"));
                          ^~~~~~~~~~~~~~~~~~~
/Users/falcon/.rbenv/versions/2.6.5/include/ruby-2.6.0/ruby/ruby.h:1826:23: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                      ^
/Users/falcon/.rbenv/versions/2.6.5/include/ruby-2.6.0/ruby/ruby.h:413:29: note: expanded from macro 'ID2SYM'
#define ID2SYM(x) RB_ID2SYM(x)
                            ^
/Users/falcon/.rbenv/versions/2.6.5/include/ruby-2.6.0/ruby/ruby.h:408:33: note: expanded from macro 'RB_ID2SYM'
#define RB_ID2SYM(x) (rb_id2sym(x))
                                ^
selector.c:261:27: note: '{' token is here
            return ID2SYM(rb_intern("kqueue"));
                          ^~~~~~~~~~~~~~~~~~~
/Users/falcon/.rbenv/versions/2.6.5/include/ruby-2.6.0/ruby/ruby.h:1826:24: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/falcon/.rbenv/versions/2.6.5/include/ruby-2.6.0/ruby/ruby.h:1811:5: note: expanded from macro 'RUBY_CONST_ID_CACHE'
    {                                                   \
    ^
/Users/falcon/.rbenv/versions/2.6.5/include/ruby-2.6.0/ruby/ruby.h:413:29: note: expanded from macro 'ID2SYM'
#define ID2SYM(x) RB_ID2SYM(x)
                            ^
/Users/falcon/.rbenv/versions/2.6.5/include/ruby-2.6.0/ruby/ruby.h:408:33: note: expanded from macro 'RB_ID2SYM'
#define RB_ID2SYM(x) (rb_id2sym(x))
                                ^
selector.c:261:27: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
            return ID2SYM(rb_intern("kqueue"));
                          ^~~~~~~~~~~~~~~~~~~
/Users/falcon/.rbenv/versions/2.6.5/include/ruby-2.6.0/ruby/ruby.h:1826:24: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/falcon/.rbenv/versions/2.6.5/include/ruby-2.6.0/ruby/ruby.h:1816:5: note: expanded from macro 'RUBY_CONST_ID_CACHE'
    }
    ^
/Users/falcon/.rbenv/versions/2.6.5/include/ruby-2.6.0/ruby/ruby.h:413:29: note: expanded from macro 'ID2SYM'
#define ID2SYM(x) RB_ID2SYM(x)
                            ^
/Users/falcon/.rbenv/versions/2.6.5/include/ruby-2.6.0/ruby/ruby.h:408:33: note: expanded from macro 'RB_ID2SYM'
#define RB_ID2SYM(x) (rb_id2sym(x))
                                ^
selector.c:261:27: note: ')' token is here
            return ID2SYM(rb_intern("kqueue"));
                          ^~~~~~~~~~~~~~~~~~~
/Users/falcon/.rbenv/versions/2.6.5/include/ruby-2.6.0/ruby/ruby.h:1826:56: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                                                       ^
/Users/falcon/.rbenv/versions/2.6.5/include/ruby-2.6.0/ruby/ruby.h:413:29: note: expanded from macro 'ID2SYM'
#define ID2SYM(x) RB_ID2SYM(x)
                            ^
/Users/falcon/.rbenv/versions/2.6.5/include/ruby-2.6.0/ruby/ruby.h:408:33: note: expanded from macro 'RB_ID2SYM'
#define RB_ID2SYM(x) (rb_id2sym(x))
                                ^
selector.c:263:27: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
            return ID2SYM(rb_intern("select"));
                          ^~~~~~~~~~~~~~~~~~~
/Users/falcon/.rbenv/versions/2.6.5/include/ruby-2.6.0/ruby/ruby.h:1826:23: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                      ^
/Users/falcon/.rbenv/versions/2.6.5/include/ruby-2.6.0/ruby/ruby.h:413:29: note: expanded from macro 'ID2SYM'
#define ID2SYM(x) RB_ID2SYM(x)
                            ^
/Users/falcon/.rbenv/versions/2.6.5/include/ruby-2.6.0/ruby/ruby.h:408:33: note: expanded from macro 'RB_ID2SYM'
#define RB_ID2SYM(x) (rb_id2sym(x))
                                ^
selector.c:263:27: note: '{' token is here
            return ID2SYM(rb_intern("select"));
                          ^~~~~~~~~~~~~~~~~~~
/Users/falcon/.rbenv/versions/2.6.5/include/ruby-2.6.0/ruby/ruby.h:1826:24: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/falcon/.rbenv/versions/2.6.5/include/ruby-2.6.0/ruby/ruby.h:1811:5: note: expanded from macro 'RUBY_CONST_ID_CACHE'
    {                                                   \
    ^
/Users/falcon/.rbenv/versions/2.6.5/include/ruby-2.6.0/ruby/ruby.h:413:29: note: expanded from macro 'ID2SYM'
#define ID2SYM(x) RB_ID2SYM(x)
                            ^
/Users/falcon/.rbenv/versions/2.6.5/include/ruby-2.6.0/ruby/ruby.h:408:33: note: expanded from macro 'RB_ID2SYM'
#define RB_ID2SYM(x) (rb_id2sym(x))
                                ^
selector.c:263:27: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
            return ID2SYM(rb_intern("select"));
                          ^~~~~~~~~~~~~~~~~~~
/Users/falcon/.rbenv/versions/2.6.5/include/ruby-2.6.0/ruby/ruby.h:1826:24: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/falcon/.rbenv/versions/2.6.5/include/ruby-2.6.0/ruby/ruby.h:1816:5: note: expanded from macro 'RUBY_CONST_ID_CACHE'
    }
    ^
/Users/falcon/.rbenv/versions/2.6.5/include/ruby-2.6.0/ruby/ruby.h:413:29: note: expanded from macro 'ID2SYM'
#define ID2SYM(x) RB_ID2SYM(x)
                            ^
/Users/falcon/.rbenv/versions/2.6.5/include/ruby-2.6.0/ruby/ruby.h:408:33: note: expanded from macro 'RB_ID2SYM'
#define RB_ID2SYM(x) (rb_id2sym(x))
                                ^
selector.c:263:27: note: ')' token is here
            return ID2SYM(rb_intern("select"));
                          ^~~~~~~~~~~~~~~~~~~
/Users/falcon/.rbenv/versions/2.6.5/include/ruby-2.6.0/ruby/ruby.h:1826:56: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                                                       ^
/Users/falcon/.rbenv/versions/2.6.5/include/ruby-2.6.0/ruby/ruby.h:413:29: note: expanded from macro 'ID2SYM'
#define ID2SYM(x) RB_ID2SYM(x)
                            ^
/Users/falcon/.rbenv/versions/2.6.5/include/ruby-2.6.0/ruby/ruby.h:408:33: note: expanded from macro 'RB_ID2SYM'
#define RB_ID2SYM(x) (rb_id2sym(x))
                                ^
selector.c:265:27: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
            return ID2SYM(rb_intern("port"));
                          ^~~~~~~~~~~~~~~~~
/Users/falcon/.rbenv/versions/2.6.5/include/ruby-2.6.0/ruby/ruby.h:1826:23: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                      ^
/Users/falcon/.rbenv/versions/2.6.5/include/ruby-2.6.0/ruby/ruby.h:413:29: note: expanded from macro 'ID2SYM'
#define ID2SYM(x) RB_ID2SYM(x)
                            ^
/Users/falcon/.rbenv/versions/2.6.5/include/ruby-2.6.0/ruby/ruby.h:408:33: note: expanded from macro 'RB_ID2SYM'
#define RB_ID2SYM(x) (rb_id2sym(x))
                                ^
selector.c:265:27: note: '{' token is here
            return ID2SYM(rb_intern("port"));
                          ^~~~~~~~~~~~~~~~~
/Users/falcon/.rbenv/versions/2.6.5/include/ruby-2.6.0/ruby/ruby.h:1826:24: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/falcon/.rbenv/versions/2.6.5/include/ruby-2.6.0/ruby/ruby.h:1811:5: note: expanded from macro 'RUBY_CONST_ID_CACHE'
    {                                                   \
    ^
/Users/falcon/.rbenv/versions/2.6.5/include/ruby-2.6.0/ruby/ruby.h:413:29: note: expanded from macro 'ID2SYM'
#define ID2SYM(x) RB_ID2SYM(x)
                            ^
/Users/falcon/.rbenv/versions/2.6.5/include/ruby-2.6.0/ruby/ruby.h:408:33: note: expanded from macro 'RB_ID2SYM'
#define RB_ID2SYM(x) (rb_id2sym(x))
                                ^
selector.c:265:27: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
            return ID2SYM(rb_intern("port"));
                          ^~~~~~~~~~~~~~~~~
/Users/falcon/.rbenv/versions/2.6.5/include/ruby-2.6.0/ruby/ruby.h:1826:24: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/falcon/.rbenv/versions/2.6.5/include/ruby-2.6.0/ruby/ruby.h:1816:5: note: expanded from macro 'RUBY_CONST_ID_CACHE'
    }
    ^
/Users/falcon/.rbenv/versions/2.6.5/include/ruby-2.6.0/ruby/ruby.h:413:29: note: expanded from macro 'ID2SYM'
#define ID2SYM(x) RB_ID2SYM(x)
                            ^
/Users/falcon/.rbenv/versions/2.6.5/include/ruby-2.6.0/ruby/ruby.h:408:33: note: expanded from macro 'RB_ID2SYM'
#define RB_ID2SYM(x) (rb_id2sym(x))
                                ^
selector.c:265:27: note: ')' token is here
            return ID2SYM(rb_intern("port"));
                          ^~~~~~~~~~~~~~~~~
/Users/falcon/.rbenv/versions/2.6.5/include/ruby-2.6.0/ruby/ruby.h:1826:56: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                                                       ^
/Users/falcon/.rbenv/versions/2.6.5/include/ruby-2.6.0/ruby/ruby.h:413:29: note: expanded from macro 'ID2SYM'
#define ID2SYM(x) RB_ID2SYM(x)
                            ^
/Users/falcon/.rbenv/versions/2.6.5/include/ruby-2.6.0/ruby/ruby.h:408:33: note: expanded from macro 'RB_ID2SYM'
#define RB_ID2SYM(x) (rb_id2sym(x))
                                ^
selector.c:268:19: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    return ID2SYM(rb_intern("unknown"));
                  ^~~~~~~~~~~~~~~~~~~~
/Users/falcon/.rbenv/versions/2.6.5/include/ruby-2.6.0/ruby/ruby.h:1826:23: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                      ^
/Users/falcon/.rbenv/versions/2.6.5/include/ruby-2.6.0/ruby/ruby.h:413:29: note: expanded from macro 'ID2SYM'
#define ID2SYM(x) RB_ID2SYM(x)
                            ^
/Users/falcon/.rbenv/versions/2.6.5/include/ruby-2.6.0/ruby/ruby.h:408:33: note: expanded from macro 'RB_ID2SYM'
#define RB_ID2SYM(x) (rb_id2sym(x))
                                ^
selector.c:268:19: note: '{' token is here
    return ID2SYM(rb_intern("unknown"));
                  ^~~~~~~~~~~~~~~~~~~~
/Users/falcon/.rbenv/versions/2.6.5/include/ruby-2.6.0/ruby/ruby.h:1826:24: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/falcon/.rbenv/versions/2.6.5/include/ruby-2.6.0/ruby/ruby.h:1811:5: note: expanded from macro 'RUBY_CONST_ID_CACHE'
    {                                                   \
    ^
/Users/falcon/.rbenv/versions/2.6.5/include/ruby-2.6.0/ruby/ruby.h:413:29: note: expanded from macro 'ID2SYM'
#define ID2SYM(x) RB_ID2SYM(x)
                            ^
/Users/falcon/.rbenv/versions/2.6.5/include/ruby-2.6.0/ruby/ruby.h:408:33: note: expanded from macro 'RB_ID2SYM'
#define RB_ID2SYM(x) (rb_id2sym(x))
                                ^
selector.c:268:19: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    return ID2SYM(rb_intern("unknown"));
                  ^~~~~~~~~~~~~~~~~~~~
/Users/falcon/.rbenv/versions/2.6.5/include/ruby-2.6.0/ruby/ruby.h:1826:24: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/falcon/.rbenv/versions/2.6.5/include/ruby-2.6.0/ruby/ruby.h:1816:5: note: expanded from macro 'RUBY_CONST_ID_CACHE'
    }
    ^
/Users/falcon/.rbenv/versions/2.6.5/include/ruby-2.6.0/ruby/ruby.h:413:29: note: expanded from macro 'ID2SYM'
#define ID2SYM(x) RB_ID2SYM(x)
                            ^
/Users/falcon/.rbenv/versions/2.6.5/include/ruby-2.6.0/ruby/ruby.h:408:33: note: expanded from macro 'RB_ID2SYM'
#define RB_ID2SYM(x) (rb_id2sym(x))
                                ^
selector.c:268:19: note: ')' token is here
    return ID2SYM(rb_intern("unknown"));
                  ^~~~~~~~~~~~~~~~~~~~
/Users/falcon/.rbenv/versions/2.6.5/include/ruby-2.6.0/ruby/ruby.h:1826:56: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                                                       ^
/Users/falcon/.rbenv/versions/2.6.5/include/ruby-2.6.0/ruby/ruby.h:413:29: note: expanded from macro 'ID2SYM'
#define ID2SYM(x) RB_ID2SYM(x)
                            ^
/Users/falcon/.rbenv/versions/2.6.5/include/ruby-2.6.0/ruby/ruby.h:408:33: note: expanded from macro 'RB_ID2SYM'
#define RB_ID2SYM(x) (rb_id2sym(x))
                                ^
selector.c:277:37: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    lock_holder = rb_ivar_get(self, rb_intern("lock_holder"));
                                    ^~~~~~~~~~~~~~~~~~~~~~~~
/Users/falcon/.rbenv/versions/2.6.5/include/ruby-2.6.0/ruby/ruby.h:1826:23: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                      ^
selector.c:277:37: note: '{' token is here
    lock_holder = rb_ivar_get(self, rb_intern("lock_holder"));
                                    ^~~~~~~~~~~~~~~~~~~~~~~~
/Users/falcon/.rbenv/versions/2.6.5/include/ruby-2.6.0/ruby/ruby.h:1826:24: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/falcon/.rbenv/versions/2.6.5/include/ruby-2.6.0/ruby/ruby.h:1811:5: note: expanded from macro 'RUBY_CONST_ID_CACHE'
    {                                                   \
    ^
selector.c:277:37: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    lock_holder = rb_ivar_get(self, rb_intern("lock_holder"));
                                    ^~~~~~~~~~~~~~~~~~~~~~~~
/Users/falcon/.rbenv/versions/2.6.5/include/ruby-2.6.0/ruby/ruby.h:1826:24: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/falcon/.rbenv/versions/2.6.5/include/ruby-2.6.0/ruby/ruby.h:1816:5: note: expanded from macro 'RUBY_CONST_ID_CACHE'
    }
    ^
selector.c:277:37: note: ')' token is here
    lock_holder = rb_ivar_get(self, rb_intern("lock_holder"));
                                    ^~~~~~~~~~~~~~~~~~~~~~~~
/Users/falcon/.rbenv/versions/2.6.5/include/ruby-2.6.0/ruby/ruby.h:1826:56: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                                                       ^
selector.c:280:34: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        lock = rb_ivar_get(self, rb_intern("lock"));
                                 ^~~~~~~~~~~~~~~~~
/Users/falcon/.rbenv/versions/2.6.5/include/ruby-2.6.0/ruby/ruby.h:1826:23: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                      ^
selector.c:280:34: note: '{' token is here
        lock = rb_ivar_get(self, rb_intern("lock"));
                                 ^~~~~~~~~~~~~~~~~
/Users/falcon/.rbenv/versions/2.6.5/include/ruby-2.6.0/ruby/ruby.h:1826:24: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/falcon/.rbenv/versions/2.6.5/include/ruby-2.6.0/ruby/ruby.h:1811:5: note: expanded from macro 'RUBY_CONST_ID_CACHE'
    {                                                   \
    ^
selector.c:280:34: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        lock = rb_ivar_get(self, rb_intern("lock"));
                                 ^~~~~~~~~~~~~~~~~
/Users/falcon/.rbenv/versions/2.6.5/include/ruby-2.6.0/ruby/ruby.h:1826:24: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/falcon/.rbenv/versions/2.6.5/include/ruby-2.6.0/ruby/ruby.h:1816:5: note: expanded from macro 'RUBY_CONST_ID_CACHE'
    }
    ^
selector.c:280:34: note: ')' token is here
        lock = rb_ivar_get(self, rb_intern("lock"));
                                 ^~~~~~~~~~~~~~~~~
/Users/falcon/.rbenv/versions/2.6.5/include/ruby-2.6.0/ruby/ruby.h:1826:56: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                                                       ^
selector.c:281:26: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        rb_funcall(lock, rb_intern("lock"), 0);
                         ^~~~~~~~~~~~~~~~~
/Users/falcon/.rbenv/versions/2.6.5/include/ruby-2.6.0/ruby/ruby.h:1826:23: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                      ^
/Users/falcon/.rbenv/versions/2.6.5/include/ruby-2.6.0/ruby/ruby.h:2602:20: note: expanded from macro 'rb_funcall'
        rb_funcallv(recv, mid, \
                          ^~~
selector.c:281:26: note: '{' token is here
        rb_funcall(lock, rb_intern("lock"), 0);
                         ^~~~~~~~~~~~~~~~~
/Users/falcon/.rbenv/versions/2.6.5/include/ruby-2.6.0/ruby/ruby.h:1826:24: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/falcon/.rbenv/versions/2.6.5/include/ruby-2.6.0/ruby/ruby.h:1811:5: note: expanded from macro 'RUBY_CONST_ID_CACHE'
    {                                                   \
    ^
/Users/falcon/.rbenv/versions/2.6.5/include/ruby-2.6.0/ruby/ruby.h:2602:20: note: expanded from macro 'rb_funcall'
        rb_funcallv(recv, mid, \
                          ^~~
selector.c:281:26: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        rb_funcall(lock, rb_intern("lock"), 0);
                         ^~~~~~~~~~~~~~~~~
/Users/falcon/.rbenv/versions/2.6.5/include/ruby-2.6.0/ruby/ruby.h:1826:24: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/falcon/.rbenv/versions/2.6.5/include/ruby-2.6.0/ruby/ruby.h:1816:5: note: expanded from macro 'RUBY_CONST_ID_CACHE'
    }
    ^
/Users/falcon/.rbenv/versions/2.6.5/include/ruby-2.6.0/ruby/ruby.h:2602:20: note: expanded from macro 'rb_funcall'
        rb_funcallv(recv, mid, \
                          ^~~
selector.c:281:26: note: ')' token is here
        rb_funcall(lock, rb_intern("lock"), 0);
                         ^~~~~~~~~~~~~~~~~
/Users/falcon/.rbenv/versions/2.6.5/include/ruby-2.6.0/ruby/ruby.h:1826:56: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                                                       ^
/Users/falcon/.rbenv/versions/2.6.5/include/ruby-2.6.0/ruby/ruby.h:2602:20: note: expanded from macro 'rb_funcall'
        rb_funcallv(recv, mid, \
                          ^~~
selector.c:282:27: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        rb_ivar_set(self, rb_intern("lock_holder"), current_thread);
                          ^~~~~~~~~~~~~~~~~~~~~~~~
/Users/falcon/.rbenv/versions/2.6.5/include/ruby-2.6.0/ruby/ruby.h:1826:23: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                      ^
selector.c:282:27: note: '{' token is here
        rb_ivar_set(self, rb_intern("lock_holder"), current_thread);
                          ^~~~~~~~~~~~~~~~~~~~~~~~
/Users/falcon/.rbenv/versions/2.6.5/include/ruby-2.6.0/ruby/ruby.h:1826:24: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/falcon/.rbenv/versions/2.6.5/include/ruby-2.6.0/ruby/ruby.h:1811:5: note: expanded from macro 'RUBY_CONST_ID_CACHE'
    {                                                   \
    ^
selector.c:282:27: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        rb_ivar_set(self, rb_intern("lock_holder"), current_thread);
                          ^~~~~~~~~~~~~~~~~~~~~~~~
/Users/falcon/.rbenv/versions/2.6.5/include/ruby-2.6.0/ruby/ruby.h:1826:24: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/falcon/.rbenv/versions/2.6.5/include/ruby-2.6.0/ruby/ruby.h:1816:5: note: expanded from macro 'RUBY_CONST_ID_CACHE'
    }
    ^
selector.c:282:27: note: ')' token is here
        rb_ivar_set(self, rb_intern("lock_holder"), current_thread);
                          ^~~~~~~~~~~~~~~~~~~~~~~~
/Users/falcon/.rbenv/versions/2.6.5/include/ruby-2.6.0/ruby/ruby.h:1826:56: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                                                       ^
selector.c:297:23: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    rb_ivar_set(self, rb_intern("lock_holder"), Qnil);
                      ^~~~~~~~~~~~~~~~~~~~~~~~
/Users/falcon/.rbenv/versions/2.6.5/include/ruby-2.6.0/ruby/ruby.h:1826:23: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                      ^
selector.c:297:23: note: '{' token is here
    rb_ivar_set(self, rb_intern("lock_holder"), Qnil);
                      ^~~~~~~~~~~~~~~~~~~~~~~~
/Users/falcon/.rbenv/versions/2.6.5/include/ruby-2.6.0/ruby/ruby.h:1826:24: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/falcon/.rbenv/versions/2.6.5/include/ruby-2.6.0/ruby/ruby.h:1811:5: note: expanded from macro 'RUBY_CONST_ID_CACHE'
    {                                                   \
    ^
selector.c:297:23: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    rb_ivar_set(self, rb_intern("lock_holder"), Qnil);
                      ^~~~~~~~~~~~~~~~~~~~~~~~
/Users/falcon/.rbenv/versions/2.6.5/include/ruby-2.6.0/ruby/ruby.h:1826:24: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/falcon/.rbenv/versions/2.6.5/include/ruby-2.6.0/ruby/ruby.h:1816:5: note: expanded from macro 'RUBY_CONST_ID_CACHE'
    }
    ^
selector.c:297:23: note: ')' token is here
    rb_ivar_set(self, rb_intern("lock_holder"), Qnil);
                      ^~~~~~~~~~~~~~~~~~~~~~~~
/Users/falcon/.rbenv/versions/2.6.5/include/ruby-2.6.0/ruby/ruby.h:1826:56: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                                                       ^
selector.c:299:30: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    lock = rb_ivar_get(self, rb_intern("lock"));
                             ^~~~~~~~~~~~~~~~~
/Users/falcon/.rbenv/versions/2.6.5/include/ruby-2.6.0/ruby/ruby.h:1826:23: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                      ^
selector.c:299:30: note: '{' token is here
    lock = rb_ivar_get(self, rb_intern("lock"));
                             ^~~~~~~~~~~~~~~~~
/Users/falcon/.rbenv/versions/2.6.5/include/ruby-2.6.0/ruby/ruby.h:1826:24: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/falcon/.rbenv/versions/2.6.5/include/ruby-2.6.0/ruby/ruby.h:1811:5: note: expanded from macro 'RUBY_CONST_ID_CACHE'
    {                                                   \
    ^
selector.c:299:30: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    lock = rb_ivar_get(self, rb_intern("lock"));
                             ^~~~~~~~~~~~~~~~~
/Users/falcon/.rbenv/versions/2.6.5/include/ruby-2.6.0/ruby/ruby.h:1826:24: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/falcon/.rbenv/versions/2.6.5/include/ruby-2.6.0/ruby/ruby.h:1816:5: note: expanded from macro 'RUBY_CONST_ID_CACHE'
    }
    ^
selector.c:299:30: note: ')' token is here
    lock = rb_ivar_get(self, rb_intern("lock"));
                             ^~~~~~~~~~~~~~~~~
/Users/falcon/.rbenv/versions/2.6.5/include/ruby-2.6.0/ruby/ruby.h:1826:56: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                                                       ^
selector.c:300:22: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    rb_funcall(lock, rb_intern("unlock"), 0);
                     ^~~~~~~~~~~~~~~~~~~
/Users/falcon/.rbenv/versions/2.6.5/include/ruby-2.6.0/ruby/ruby.h:1826:23: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                      ^
/Users/falcon/.rbenv/versions/2.6.5/include/ruby-2.6.0/ruby/ruby.h:2602:20: note: expanded from macro 'rb_funcall'
        rb_funcallv(recv, mid, \
                          ^~~
selector.c:300:22: note: '{' token is here
    rb_funcall(lock, rb_intern("unlock"), 0);
                     ^~~~~~~~~~~~~~~~~~~
/Users/falcon/.rbenv/versions/2.6.5/include/ruby-2.6.0/ruby/ruby.h:1826:24: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/falcon/.rbenv/versions/2.6.5/include/ruby-2.6.0/ruby/ruby.h:1811:5: note: expanded from macro 'RUBY_CONST_ID_CACHE'
    {                                                   \
    ^
/Users/falcon/.rbenv/versions/2.6.5/include/ruby-2.6.0/ruby/ruby.h:2602:20: note: expanded from macro 'rb_funcall'
        rb_funcallv(recv, mid, \
                          ^~~
selector.c:300:22: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    rb_funcall(lock, rb_intern("unlock"), 0);
                     ^~~~~~~~~~~~~~~~~~~
/Users/falcon/.rbenv/versions/2.6.5/include/ruby-2.6.0/ruby/ruby.h:1826:24: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/falcon/.rbenv/versions/2.6.5/include/ruby-2.6.0/ruby/ruby.h:1816:5: note: expanded from macro 'RUBY_CONST_ID_CACHE'
    }
    ^
/Users/falcon/.rbenv/versions/2.6.5/include/ruby-2.6.0/ruby/ruby.h:2602:20: note: expanded from macro 'rb_funcall'
        rb_funcallv(recv, mid, \
                          ^~~
selector.c:300:22: note: ')' token is here
    rb_funcall(lock, rb_intern("unlock"), 0);
                     ^~~~~~~~~~~~~~~~~~~
/Users/falcon/.rbenv/versions/2.6.5/include/ruby-2.6.0/ruby/ruby.h:1826:56: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                                                       ^
/Users/falcon/.rbenv/versions/2.6.5/include/ruby-2.6.0/ruby/ruby.h:2602:20: note: expanded from macro 'rb_funcall'
        rb_funcallv(recv, mid, \
                          ^~~
selector.c:328:37: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    selectables = rb_ivar_get(self, rb_intern("selectables"));
                                    ^~~~~~~~~~~~~~~~~~~~~~~~
/Users/falcon/.rbenv/versions/2.6.5/include/ruby-2.6.0/ruby/ruby.h:1826:23: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                      ^
selector.c:328:37: note: '{' token is here
    selectables = rb_ivar_get(self, rb_intern("selectables"));
                                    ^~~~~~~~~~~~~~~~~~~~~~~~
/Users/falcon/.rbenv/versions/2.6.5/include/ruby-2.6.0/ruby/ruby.h:1826:24: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/falcon/.rbenv/versions/2.6.5/include/ruby-2.6.0/ruby/ruby.h:1811:5: note: expanded from macro 'RUBY_CONST_ID_CACHE'
    {                                                   \
    ^
selector.c:328:37: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    selectables = rb_ivar_get(self, rb_intern("selectables"));
                                    ^~~~~~~~~~~~~~~~~~~~~~~~
/Users/falcon/.rbenv/versions/2.6.5/include/ruby-2.6.0/ruby/ruby.h:1826:24: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/falcon/.rbenv/versions/2.6.5/include/ruby-2.6.0/ruby/ruby.h:1816:5: note: expanded from macro 'RUBY_CONST_ID_CACHE'
    }
    ^
selector.c:328:37: note: ')' token is here
    selectables = rb_ivar_get(self, rb_intern("selectables"));
                                    ^~~~~~~~~~~~~~~~~~~~~~~~
/Users/falcon/.rbenv/versions/2.6.5/include/ruby-2.6.0/ruby/ruby.h:1826:56: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                                                       ^
selector.c:340:51: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    rb_hash_aset(selectables, rb_funcall(monitor, rb_intern("io"), 0), monitor);
                                                  ^~~~~~~~~~~~~~~
/Users/falcon/.rbenv/versions/2.6.5/include/ruby-2.6.0/ruby/ruby.h:1826:23: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                      ^
/Users/falcon/.rbenv/versions/2.6.5/include/ruby-2.6.0/ruby/ruby.h:2602:20: note: expanded from macro 'rb_funcall'
        rb_funcallv(recv, mid, \
                          ^~~
selector.c:340:51: note: '{' token is here
    rb_hash_aset(selectables, rb_funcall(monitor, rb_intern("io"), 0), monitor);
                                                  ^~~~~~~~~~~~~~~
/Users/falcon/.rbenv/versions/2.6.5/include/ruby-2.6.0/ruby/ruby.h:1826:24: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/falcon/.rbenv/versions/2.6.5/include/ruby-2.6.0/ruby/ruby.h:1811:5: note: expanded from macro 'RUBY_CONST_ID_CACHE'
    {                                                   \
    ^
/Users/falcon/.rbenv/versions/2.6.5/include/ruby-2.6.0/ruby/ruby.h:2602:20: note: expanded from macro 'rb_funcall'
        rb_funcallv(recv, mid, \
                          ^~~
selector.c:340:51: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    rb_hash_aset(selectables, rb_funcall(monitor, rb_intern("io"), 0), monitor);
                                                  ^~~~~~~~~~~~~~~
/Users/falcon/.rbenv/versions/2.6.5/include/ruby-2.6.0/ruby/ruby.h:1826:24: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/falcon/.rbenv/versions/2.6.5/include/ruby-2.6.0/ruby/ruby.h:1816:5: note: expanded from macro 'RUBY_CONST_ID_CACHE'
    }
    ^
/Users/falcon/.rbenv/versions/2.6.5/include/ruby-2.6.0/ruby/ruby.h:2602:20: note: expanded from macro 'rb_funcall'
        rb_funcallv(recv, mid, \
                          ^~~
selector.c:340:51: note: ')' token is here
    rb_hash_aset(selectables, rb_funcall(monitor, rb_intern("io"), 0), monitor);
                                                  ^~~~~~~~~~~~~~~
/Users/falcon/.rbenv/versions/2.6.5/include/ruby-2.6.0/ruby/ruby.h:1826:56: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                                                       ^
/Users/falcon/.rbenv/versions/2.6.5/include/ruby-2.6.0/ruby/ruby.h:2602:20: note: expanded from macro 'rb_funcall'
        rb_funcallv(recv, mid, \
                          ^~~
selector.c:360:37: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    selectables = rb_ivar_get(self, rb_intern("selectables"));
                                    ^~~~~~~~~~~~~~~~~~~~~~~~
/Users/falcon/.rbenv/versions/2.6.5/include/ruby-2.6.0/ruby/ruby.h:1826:23: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                      ^
selector.c:360:37: note: '{' token is here
    selectables = rb_ivar_get(self, rb_intern("selectables"));
                                    ^~~~~~~~~~~~~~~~~~~~~~~~
/Users/falcon/.rbenv/versions/2.6.5/include/ruby-2.6.0/ruby/ruby.h:1826:24: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/falcon/.rbenv/versions/2.6.5/include/ruby-2.6.0/ruby/ruby.h:1811:5: note: expanded from macro 'RUBY_CONST_ID_CACHE'
    {                                                   \
    ^
selector.c:360:37: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    selectables = rb_ivar_get(self, rb_intern("selectables"));
                                    ^~~~~~~~~~~~~~~~~~~~~~~~
/Users/falcon/.rbenv/versions/2.6.5/include/ruby-2.6.0/ruby/ruby.h:1826:24: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/falcon/.rbenv/versions/2.6.5/include/ruby-2.6.0/ruby/ruby.h:1816:5: note: expanded from macro 'RUBY_CONST_ID_CACHE'
    }
    ^
selector.c:360:37: note: ')' token is here
    selectables = rb_ivar_get(self, rb_intern("selectables"));
                                    ^~~~~~~~~~~~~~~~~~~~~~~~
/Users/falcon/.rbenv/versions/2.6.5/include/ruby-2.6.0/ruby/ruby.h:1826:56: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                                                       ^
selector.c:364:29: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        rb_funcall(monitor, rb_intern("close"), 1, Qfalse);
                            ^~~~~~~~~~~~~~~~~~
/Users/falcon/.rbenv/versions/2.6.5/include/ruby-2.6.0/ruby/ruby.h:1826:23: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                      ^
/Users/falcon/.rbenv/versions/2.6.5/include/ruby-2.6.0/ruby/ruby.h:2602:20: note: expanded from macro 'rb_funcall'
        rb_funcallv(recv, mid, \
                          ^~~
selector.c:364:29: note: '{' token is here
        rb_funcall(monitor, rb_intern("close"), 1, Qfalse);
                            ^~~~~~~~~~~~~~~~~~
/Users/falcon/.rbenv/versions/2.6.5/include/ruby-2.6.0/ruby/ruby.h:1826:24: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/falcon/.rbenv/versions/2.6.5/include/ruby-2.6.0/ruby/ruby.h:1811:5: note: expanded from macro 'RUBY_CONST_ID_CACHE'
    {                                                   \
    ^
/Users/falcon/.rbenv/versions/2.6.5/include/ruby-2.6.0/ruby/ruby.h:2602:20: note: expanded from macro 'rb_funcall'
        rb_funcallv(recv, mid, \
                          ^~~
selector.c:364:29: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        rb_funcall(monitor, rb_intern("close"), 1, Qfalse);
                            ^~~~~~~~~~~~~~~~~~
/Users/falcon/.rbenv/versions/2.6.5/include/ruby-2.6.0/ruby/ruby.h:1826:24: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/falcon/.rbenv/versions/2.6.5/include/ruby-2.6.0/ruby/ruby.h:1816:5: note: expanded from macro 'RUBY_CONST_ID_CACHE'
    }
    ^
/Users/falcon/.rbenv/versions/2.6.5/include/ruby-2.6.0/ruby/ruby.h:2602:20: note: expanded from macro 'rb_funcall'
        rb_funcallv(recv, mid, \
                          ^~~
selector.c:364:29: note: ')' token is here
        rb_funcall(monitor, rb_intern("close"), 1, Qfalse);
                            ^~~~~~~~~~~~~~~~~~
/Users/falcon/.rbenv/versions/2.6.5/include/ruby-2.6.0/ruby/ruby.h:1826:56: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                                                       ^
/Users/falcon/.rbenv/versions/2.6.5/include/ruby-2.6.0/ruby/ruby.h:2602:20: note: expanded from macro 'rb_funcall'
        rb_funcallv(recv, mid, \
                          ^~~
selector.c:373:43: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    VALUE selectables = rb_ivar_get(self, rb_intern("selectables"));
                                          ^~~~~~~~~~~~~~~~~~~~~~~~
/Users/falcon/.rbenv/versions/2.6.5/include/ruby-2.6.0/ruby/ruby.h:1826:23: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                      ^
selector.c:373:43: note: '{' token is here
    VALUE selectables = rb_ivar_get(self, rb_intern("selectables"));
                                          ^~~~~~~~~~~~~~~~~~~~~~~~
/Users/falcon/.rbenv/versions/2.6.5/include/ruby-2.6.0/ruby/ruby.h:1826:24: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/falcon/.rbenv/versions/2.6.5/include/ruby-2.6.0/ruby/ruby.h:1811:5: note: expanded from macro 'RUBY_CONST_ID_CACHE'
    {                                                   \
    ^
selector.c:373:43: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    VALUE selectables = rb_ivar_get(self, rb_intern("selectables"));
                                          ^~~~~~~~~~~~~~~~~~~~~~~~
/Users/falcon/.rbenv/versions/2.6.5/include/ruby-2.6.0/ruby/ruby.h:1826:24: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/falcon/.rbenv/versions/2.6.5/include/ruby-2.6.0/ruby/ruby.h:1816:5: note: expanded from macro 'RUBY_CONST_ID_CACHE'
    }
    ^
selector.c:373:43: note: ')' token is here
    VALUE selectables = rb_ivar_get(self, rb_intern("selectables"));
                                          ^~~~~~~~~~~~~~~~~~~~~~~~
/Users/falcon/.rbenv/versions/2.6.5/include/ruby-2.6.0/ruby/ruby.h:1826:56: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                                                       ^
selector.c:376:36: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    return rb_funcall(selectables, rb_intern("has_key?"), 1, io);
                                   ^~~~~~~~~~~~~~~~~~~~~
/Users/falcon/.rbenv/versions/2.6.5/include/ruby-2.6.0/ruby/ruby.h:1826:23: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                      ^
/Users/falcon/.rbenv/versions/2.6.5/include/ruby-2.6.0/ruby/ruby.h:2602:20: note: expanded from macro 'rb_funcall'
        rb_funcallv(recv, mid, \
                          ^~~
selector.c:376:36: note: '{' token is here
    return rb_funcall(selectables, rb_intern("has_key?"), 1, io);
                                   ^~~~~~~~~~~~~~~~~~~~~
/Users/falcon/.rbenv/versions/2.6.5/include/ruby-2.6.0/ruby/ruby.h:1826:24: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/falcon/.rbenv/versions/2.6.5/include/ruby-2.6.0/ruby/ruby.h:1811:5: note: expanded from macro 'RUBY_CONST_ID_CACHE'
    {                                                   \
    ^
/Users/falcon/.rbenv/versions/2.6.5/include/ruby-2.6.0/ruby/ruby.h:2602:20: note: expanded from macro 'rb_funcall'
        rb_funcallv(recv, mid, \
                          ^~~
selector.c:376:36: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    return rb_funcall(selectables, rb_intern("has_key?"), 1, io);
                                   ^~~~~~~~~~~~~~~~~~~~~
/Users/falcon/.rbenv/versions/2.6.5/include/ruby-2.6.0/ruby/ruby.h:1826:24: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/falcon/.rbenv/versions/2.6.5/include/ruby-2.6.0/ruby/ruby.h:1816:5: note: expanded from macro 'RUBY_CONST_ID_CACHE'
    }
    ^
/Users/falcon/.rbenv/versions/2.6.5/include/ruby-2.6.0/ruby/ruby.h:2602:20: note: expanded from macro 'rb_funcall'
        rb_funcallv(recv, mid, \
                          ^~~
selector.c:376:36: note: ')' token is here
    return rb_funcall(selectables, rb_intern("has_key?"), 1, io);
                                   ^~~~~~~~~~~~~~~~~~~~~
/Users/falcon/.rbenv/versions/2.6.5/include/ruby-2.6.0/ruby/ruby.h:1826:56: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                                                       ^
/Users/falcon/.rbenv/versions/2.6.5/include/ruby-2.6.0/ruby/ruby.h:2602:20: note: expanded from macro 'rb_funcall'
        rb_funcallv(recv, mid, \
                          ^~~
selector.c:525:43: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    VALUE selectables = rb_ivar_get(self, rb_intern("selectables"));
                                          ^~~~~~~~~~~~~~~~~~~~~~~~
/Users/falcon/.rbenv/versions/2.6.5/include/ruby-2.6.0/ruby/ruby.h:1826:23: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                      ^
selector.c:525:43: note: '{' token is here
    VALUE selectables = rb_ivar_get(self, rb_intern("selectables"));
                                          ^~~~~~~~~~~~~~~~~~~~~~~~
/Users/falcon/.rbenv/versions/2.6.5/include/ruby-2.6.0/ruby/ruby.h:1826:24: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/falcon/.rbenv/versions/2.6.5/include/ruby-2.6.0/ruby/ruby.h:1811:5: note: expanded from macro 'RUBY_CONST_ID_CACHE'
    {                                                   \
    ^
selector.c:525:43: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    VALUE selectables = rb_ivar_get(self, rb_intern("selectables"));
                                          ^~~~~~~~~~~~~~~~~~~~~~~~
/Users/falcon/.rbenv/versions/2.6.5/include/ruby-2.6.0/ruby/ruby.h:1826:24: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/falcon/.rbenv/versions/2.6.5/include/ruby-2.6.0/ruby/ruby.h:1816:5: note: expanded from macro 'RUBY_CONST_ID_CACHE'
    }
    ^
selector.c:525:43: note: ')' token is here
    VALUE selectables = rb_ivar_get(self, rb_intern("selectables"));
                                          ^~~~~~~~~~~~~~~~~~~~~~~~
/Users/falcon/.rbenv/versions/2.6.5/include/ruby-2.6.0/ruby/ruby.h:1826:56: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                                                       ^
selector.c:527:36: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    return rb_funcall(selectables, rb_intern("empty?"), 0) == Qtrue ? Qtrue : Qfalse;
                                   ^~~~~~~~~~~~~~~~~~~
/Users/falcon/.rbenv/versions/2.6.5/include/ruby-2.6.0/ruby/ruby.h:1826:23: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                      ^
/Users/falcon/.rbenv/versions/2.6.5/include/ruby-2.6.0/ruby/ruby.h:2602:20: note: expanded from macro 'rb_funcall'
        rb_funcallv(recv, mid, \
                          ^~~
selector.c:527:36: note: '{' token is here
    return rb_funcall(selectables, rb_intern("empty?"), 0) == Qtrue ? Qtrue : Qfalse;
                                   ^~~~~~~~~~~~~~~~~~~
/Users/falcon/.rbenv/versions/2.6.5/include/ruby-2.6.0/ruby/ruby.h:1826:24: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/falcon/.rbenv/versions/2.6.5/include/ruby-2.6.0/ruby/ruby.h:1811:5: note: expanded from macro 'RUBY_CONST_ID_CACHE'
    {                                                   \
    ^
/Users/falcon/.rbenv/versions/2.6.5/include/ruby-2.6.0/ruby/ruby.h:2602:20: note: expanded from macro 'rb_funcall'
        rb_funcallv(recv, mid, \
                          ^~~
selector.c:527:36: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    return rb_funcall(selectables, rb_intern("empty?"), 0) == Qtrue ? Qtrue : Qfalse;
                                   ^~~~~~~~~~~~~~~~~~~
/Users/falcon/.rbenv/versions/2.6.5/include/ruby-2.6.0/ruby/ruby.h:1826:24: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/falcon/.rbenv/versions/2.6.5/include/ruby-2.6.0/ruby/ruby.h:1816:5: note: expanded from macro 'RUBY_CONST_ID_CACHE'
    }
    ^
/Users/falcon/.rbenv/versions/2.6.5/include/ruby-2.6.0/ruby/ruby.h:2602:20: note: expanded from macro 'rb_funcall'
        rb_funcallv(recv, mid, \
                          ^~~
selector.c:527:36: note: ')' token is here
    return rb_funcall(selectables, rb_intern("empty?"), 0) == Qtrue ? Qtrue : Qfalse;
                                   ^~~~~~~~~~~~~~~~~~~
/Users/falcon/.rbenv/versions/2.6.5/include/ruby-2.6.0/ruby/ruby.h:1826:56: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                                                       ^
/Users/falcon/.rbenv/versions/2.6.5/include/ruby-2.6.0/ruby/ruby.h:2602:20: note: expanded from macro 'rb_funcall'
        rb_funcallv(recv, mid, \
                          ^~~
84 warnings generated.
linking shared-object nio4r_ext.bundle

current directory: /Users/falcon/work_space/runteq_2/advanced_rails/23890_falcon-0418_runteq_curriculum_advanced/vender/bundle/ruby/2.6.0/gems/nio4r-2.5.4/ext/nio4r
make "DESTDIR=" install
/usr/bin/install -c -m 0755 nio4r_ext.bundle ./.gem.20230612-72504-1844s1r
